{
    "sourceFile": "README.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1744898373799,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1744972526072,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,83 +1,107 @@\n # DriveNotes\r\n \r\n-A Flutter application that allows users to create, edit, and manage notes that are synced with Google Drive.\r\n+A Flutter application that allows users to create, edit, and manage notes that sync with Google Drive. The app works both online and offline, ensuring your notes are always accessible.\r\n \r\n ## Features\r\n \r\n-- Google OAuth 2.0 authentication\r\n-- Create, edit, and delete notes\r\n-- Notes are stored as text files in Google Drive\r\n-- Material 3 design with responsive UI\r\n-- Secure token storage\r\n-- Error handling and loading states\r\n-- Swipe to delete notes\r\n-- Token refresh handling\r\n+- 📝 Create and edit notes with rich text formatting\r\n+- ☁️ Sync notes with Google Drive\r\n+- 📱 Works offline with local storage\r\n+- 🔄 Automatic sync when online\r\n+- 🎨 Beautiful, modern UI with dark/light theme support\r\n+- 🔒 Secure authentication with Google Sign-In\r\n \r\n-## Setup\r\n+## Getting Started\r\n \r\n-1. Create a Google Cloud Console project:\r\n-   - Go to [Google Cloud Console](https://console.cloud.google.com)\r\n-   - Create a new project\r\n-   - Enable the Google Drive API\r\n-   - Configure the OAuth consent screen\r\n-   - Create OAuth 2.0 credentials (Web application type)\r\n-   - Add your redirect URIs\r\n+### Prerequisites\r\n \r\n-2. Update the client ID and secret:\r\n-   - Open `lib/features/notes/data/drive_service.dart`\r\n-   - Replace `your-client-id` and `your-client-secret` with your actual credentials\r\n+- Flutter SDK (latest stable version)\r\n+- Dart SDK (latest stable version)\r\n+- Android Studio / VS Code with Flutter extensions\r\n+- Google Cloud Platform account\r\n \r\n-3. Install dependencies:\r\n+### Setting Up Google API Credentials\r\n+\r\n+1. Go to the [Google Cloud Console](https://console.cloud.google.com/)\r\n+2. Create a new project\r\n+3. Enable the following APIs:\r\n+   - Google Drive API\r\n+   - Google Sign-In API\r\n+4. Create OAuth 2.0 credentials:\r\n+   - Go to \"Credentials\" > \"Create Credentials\" > \"OAuth client ID\"\r\n+   - Choose \"Android\" as the application type\r\n+   - Add your package name and SHA-1 certificate fingerprint\r\n+   - Download the credentials JSON file\r\n+5. Update the `android/app/src/main/res/values/strings.xml` with your client ID:\r\n+   ```xml\r\n+   <string name=\"server_client_id\">YOUR_CLIENT_ID</string>\r\n+   ```\r\n+\r\n+### Running the App\r\n+\r\n+1. Clone the repository\r\n+2. Install dependencies:\r\n    ```bash\r\n    flutter pub get\r\n    ```\r\n-\r\n-4. Run the app:\r\n+3. Run the app:\r\n    ```bash\r\n    flutter run\r\n    ```\r\n \r\n ## Project Structure\r\n \r\n ```\r\n lib/\r\n+├── core/\r\n+│   ├── constants/\r\n+│   ├── errors/\r\n+│   ├── utils/\r\n+│   └── widgets/\r\n ├── features/\r\n │   └── notes/\r\n │       ├── data/\r\n-│       │   └── drive_service.dart      # Google Drive API integration\r\n+│       │   ├── datasources/\r\n+│       │   ├── models/\r\n+│       │   └── repositories/\r\n │       ├── domain/\r\n-│       │   └── models/\r\n-│       │       └── note_model.dart     # Note data model\r\n+│       │   ├── entities/\r\n+│       │   ├── repositories/\r\n+│       │   └── usecases/\r\n │       └── presentation/\r\n │           ├── pages/\r\n-│           │   └── notes_list_page.dart # Notes list UI\r\n-│           └── providers/\r\n-│               ├── note_editor_controller.dart  # Note editing logic\r\n-│               └── notes_controller.dart        # Notes list logic\r\n-├── login.dart                          # Login page\r\n-└── main.dart                           # App entry point and routing\r\n+│           ├── providers/\r\n+│           └── widgets/\r\n+└── main.dart\r\n ```\r\n \r\n+## Known Limitations\r\n+\r\n+- Offline notes are synced only when the app is refreshed or restarted\r\n+- Large files may take longer to sync\r\n+- No conflict resolution for simultaneous edits\r\n+- No support for file attachments\r\n+- No support for note sharing\r\n+\r\n ## Dependencies\r\n \r\n - `flutter_riverpod`: State management\r\n+- `google_sign_in`: Google authentication\r\n+- `googleapis`: Google Drive API integration\r\n+- `sqflite`: Local database\r\n+- `flutter_secure_storage`: Secure token storage\r\n - `go_router`: Navigation\r\n-- `googleapis`: Google Drive API\r\n-- `flutter_secure_storage`: Secure token storage\r\n-- `google_sign_in`: Google authentication\r\n+- `flutter_staggered_grid_view`: Grid layout\r\n+- `timeago`: Relative time formatting\r\n \r\n-## Known Limitations\r\n+## Contributing\r\n \r\n-- No offline support\r\n-- No dark mode theme switching\r\n-- No background sync\r\n-- Limited error recovery options\r\n-- No file conflict resolution\r\n+1. Fork the repository\r\n+2. Create your feature branch (`git checkout -b feature/amazing-feature`)\r\n+3. Commit your changes (`git commit -m 'Add some amazing feature'`)\r\n+4. Push to the branch (`git push origin feature/amazing-feature`)\r\n+5. Open a Pull Request\r\n \r\n-## Contributing\r\n+## License\r\n \r\n-1. Fork the repository\r\n-2. Create your feature branch\r\n-3. Commit your changes\r\n-4. Push to the branch\r\n-5. Create a Pull Request\r\n+This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.\r\n"
                },
                {
                    "date": 1744972666326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,107 +1,83 @@\n-# DriveNotes\r\n-\r\n-A Flutter application that allows users to create, edit, and manage notes that sync with Google Drive. The app works both online and offline, ensuring your notes are always accessible.\r\n-\r\n-## Features\r\n-\r\n-- 📝 Create and edit notes with rich text formatting\r\n-- ☁️ Sync notes with Google Drive\r\n-- 📱 Works offline with local storage\r\n-- 🔄 Automatic sync when online\r\n-- 🎨 Beautiful, modern UI with dark/light theme support\r\n-- 🔒 Secure authentication with Google Sign-In\r\n-\r\n-## Getting Started\r\n-\r\n-### Prerequisites\r\n-\r\n-- Flutter SDK (latest stable version)\r\n-- Dart SDK (latest stable version)\r\n-- Android Studio / VS Code with Flutter extensions\r\n-- Google Cloud Platform account\r\n-\r\n-### Setting Up Google API Credentials\r\n-\r\n-1. Go to the [Google Cloud Console](https://console.cloud.google.com/)\r\n-2. Create a new project\r\n-3. Enable the following APIs:\r\n-   - Google Drive API\r\n-   - Google Sign-In API\r\n-4. Create OAuth 2.0 credentials:\r\n-   - Go to \"Credentials\" > \"Create Credentials\" > \"OAuth client ID\"\r\n-   - Choose \"Android\" as the application type\r\n-   - Add your package name and SHA-1 certificate fingerprint\r\n-   - Download the credentials JSON file\r\n-5. Update the `android/app/src/main/res/values/strings.xml` with your client ID:\r\n-   ```xml\r\n-   <string name=\"server_client_id\">YOUR_CLIENT_ID</string>\r\n-   ```\r\n-\r\n-### Running the App\r\n-\r\n-1. Clone the repository\r\n-2. Install dependencies:\r\n-   ```bash\r\n-   flutter pub get\r\n-   ```\r\n-3. Run the app:\r\n-   ```bash\r\n-   flutter run\r\n-   ```\r\n-\r\n-## Project Structure\r\n-\r\n-```\r\n-lib/\r\n-├── core/\r\n-│   ├── constants/\r\n-│   ├── errors/\r\n-│   ├── utils/\r\n-│   └── widgets/\r\n-├── features/\r\n-│   └── notes/\r\n-│       ├── data/\r\n-│       │   ├── datasources/\r\n-│       │   ├── models/\r\n-│       │   └── repositories/\r\n-│       ├── domain/\r\n-│       │   ├── entities/\r\n-│       │   ├── repositories/\r\n-│       │   └── usecases/\r\n-│       └── presentation/\r\n-│           ├── pages/\r\n-│           ├── providers/\r\n-│           └── widgets/\r\n-└── main.dart\r\n-```\r\n-\r\n-## Known Limitations\r\n-\r\n-- Offline notes are synced only when the app is refreshed or restarted\r\n-- Large files may take longer to sync\r\n-- No conflict resolution for simultaneous edits\r\n-- No support for file attachments\r\n-- No support for note sharing\r\n-\r\n-## Dependencies\r\n-\r\n-- `flutter_riverpod`: State management\r\n-- `google_sign_in`: Google authentication\r\n-- `googleapis`: Google Drive API integration\r\n-- `sqflite`: Local database\r\n-- `flutter_secure_storage`: Secure token storage\r\n-- `go_router`: Navigation\r\n-- `flutter_staggered_grid_view`: Grid layout\r\n-- `timeago`: Relative time formatting\r\n-\r\n-## Contributing\r\n-\r\n-1. Fork the repository\r\n-2. Create your feature branch (`git checkout -b feature/amazing-feature`)\r\n-3. Commit your changes (`git commit -m 'Add some amazing feature'`)\r\n-4. Push to the branch (`git push origin feature/amazing-feature`)\r\n-5. Open a Pull Request\r\n-\r\n-## License\r\n-\r\n-This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.\r\n+# DriveNotes\n+\n+A Flutter application that allows users to create, edit, and manage notes that are synced with Google Drive.\n+\n+## Features\n+\n+- Google OAuth 2.0 authentication\n+- Create, edit, and delete notes\n+- Notes are stored as text files in Google Drive\n+- Material 3 design with responsive UI\n+- Secure token storage\n+- Error handling and loading states\n+- Swipe to delete notes\n+- Token refresh handling\n+\n+## Setup\n+\n+1. Create a Google Cloud Console project:\n+   - Go to [Google Cloud Console](https://console.cloud.google.com)\n+   - Create a new project\n+   - Enable the Google Drive API\n+   - Configure the OAuth consent screen\n+   - Create OAuth 2.0 credentials (Web application type)\n+   - Add your redirect URIs\n+\n+2. Update the client ID and secret:\n+   - Open `lib/features/notes/data/drive_service.dart`\n+   - Replace `your-client-id` and `your-client-secret` with your actual credentials\n+\n+3. Install dependencies:\n+   ```bash\n+   flutter pub get\n+   ```\n+\n+4. Run the app:\n+   ```bash\n+   flutter run\n+   ```\n+\n+## Project Structure\n+\n+```\n+lib/\n+├── features/\n+│   └── notes/\n+│       ├── data/\n+│       │   └── drive_service.dart      # Google Drive API integration\n+│       ├── domain/\n+│       │   └── models/\n+│       │       └── note_model.dart     # Note data model\n+│       └── presentation/\n+│           ├── pages/\n+│           │   └── notes_list_page.dart # Notes list UI\n+│           └── providers/\n+│               ├── note_editor_controller.dart  # Note editing logic\n+│               └── notes_controller.dart        # Notes list logic\n+├── login.dart                          # Login page\n+└── main.dart                           # App entry point and routing\n+```\n+\n+## Dependencies\n+\n+- `flutter_riverpod`: State management\n+- `go_router`: Navigation\n+- `googleapis`: Google Drive API\n+- `flutter_secure_storage`: Secure token storage\n+- `google_sign_in`: Google authentication\n+\n+## Known Limitations\n+\n+- No offline support\n+- No dark mode theme switching\n+- No background sync\n+- Limited error recovery options\n+- No file conflict resolution\n+\n+## Contributing\n+\n+1. Fork the repository\n+2. Create your feature branch\n+3. Commit your changes\n+4. Push to the branch\n+5. Create a Pull Request\n"
                }
            ],
            "date": 1744898373799,
            "name": "Commit-0",
            "content": "# DriveNotes\r\n\r\nA Flutter application that allows users to create, edit, and manage notes that are synced with Google Drive.\r\n\r\n## Features\r\n\r\n- Google OAuth 2.0 authentication\r\n- Create, edit, and delete notes\r\n- Notes are stored as text files in Google Drive\r\n- Material 3 design with responsive UI\r\n- Secure token storage\r\n- Error handling and loading states\r\n- Swipe to delete notes\r\n- Token refresh handling\r\n\r\n## Setup\r\n\r\n1. Create a Google Cloud Console project:\r\n   - Go to [Google Cloud Console](https://console.cloud.google.com)\r\n   - Create a new project\r\n   - Enable the Google Drive API\r\n   - Configure the OAuth consent screen\r\n   - Create OAuth 2.0 credentials (Web application type)\r\n   - Add your redirect URIs\r\n\r\n2. Update the client ID and secret:\r\n   - Open `lib/features/notes/data/drive_service.dart`\r\n   - Replace `your-client-id` and `your-client-secret` with your actual credentials\r\n\r\n3. Install dependencies:\r\n   ```bash\r\n   flutter pub get\r\n   ```\r\n\r\n4. Run the app:\r\n   ```bash\r\n   flutter run\r\n   ```\r\n\r\n## Project Structure\r\n\r\n```\r\nlib/\r\n├── features/\r\n│   └── notes/\r\n│       ├── data/\r\n│       │   └── drive_service.dart      # Google Drive API integration\r\n│       ├── domain/\r\n│       │   └── models/\r\n│       │       └── note_model.dart     # Note data model\r\n│       └── presentation/\r\n│           ├── pages/\r\n│           │   └── notes_list_page.dart # Notes list UI\r\n│           └── providers/\r\n│               ├── note_editor_controller.dart  # Note editing logic\r\n│               └── notes_controller.dart        # Notes list logic\r\n├── login.dart                          # Login page\r\n└── main.dart                           # App entry point and routing\r\n```\r\n\r\n## Dependencies\r\n\r\n- `flutter_riverpod`: State management\r\n- `go_router`: Navigation\r\n- `googleapis`: Google Drive API\r\n- `flutter_secure_storage`: Secure token storage\r\n- `google_sign_in`: Google authentication\r\n\r\n## Known Limitations\r\n\r\n- No offline support\r\n- No dark mode theme switching\r\n- No background sync\r\n- Limited error recovery options\r\n- No file conflict resolution\r\n\r\n## Contributing\r\n\r\n1. Fork the repository\r\n2. Create your feature branch\r\n3. Commit your changes\r\n4. Push to the branch\r\n5. Create a Pull Request\r\n"
        }
    ]
}