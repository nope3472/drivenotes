{
    "sourceFile": "lib/login.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 51,
            "patches": [
                {
                    "date": 1744891247571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1744891694015,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,9 +107,9 @@\n                     child: const Text(\"Login with Email\"),\r\n                   ),\r\n                   const SizedBox(height: 20),\r\n                   ElevatedButton.icon(\r\n-                    icon: Image.asset('assets/google_logo.png', height: 24),\r\n+                    icon: Image.asset('lib/assets/google_logo.png', height: 24),\r\n                     onPressed: _signInWithGoogle,\r\n                     label: const Text(\"Sign in with Google\"),\r\n                     style: ElevatedButton.styleFrom(backgroundColor: Colors.white, foregroundColor: Colors.black),\r\n                   ),\r\n"
                },
                {
                    "date": 1744891717747,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,46 +76,52 @@\n     }\r\n   }\r\n \r\n   void _showMessage(String message) {\r\n-    ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text(message)));\r\n+    ScaffoldMessenger.of(\r\n+      context,\r\n+    ).showSnackBar(SnackBar(content: Text(message)));\r\n   }\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n       appBar: AppBar(title: const Text(\"Login\")),\r\n       body: Padding(\r\n         padding: const EdgeInsets.all(20.0),\r\n-        child: _isLoading\r\n-            ? const Center(child: CircularProgressIndicator())\r\n-            : Column(\r\n-                mainAxisAlignment: MainAxisAlignment.center,\r\n-                children: [\r\n-                  TextField(\r\n-                    controller: _emailController,\r\n-                    decoration: const InputDecoration(labelText: \"Email\"),\r\n-                  ),\r\n-                  const SizedBox(height: 10),\r\n-                  TextField(\r\n-                    controller: _passwordController,\r\n-                    obscureText: true,\r\n-                    decoration: const InputDecoration(labelText: \"Password\"),\r\n-                  ),\r\n-                  const SizedBox(height: 20),\r\n-                  ElevatedButton(\r\n-                    onPressed: _signInWithEmail,\r\n-                    child: const Text(\"Login with Email\"),\r\n-                  ),\r\n-                  const SizedBox(height: 20),\r\n-                  ElevatedButton.icon(\r\n-                    icon: Image.asset('lib/assets/google_logo.png', height: 24),\r\n-                    onPressed: _signInWithGoogle,\r\n-                    label: const Text(\"Sign in with Google\"),\r\n-                    style: ElevatedButton.styleFrom(backgroundColor: Colors.white, foregroundColor: Colors.black),\r\n-                  ),\r\n-                ],\r\n-              ),\r\n+        child:\r\n+            _isLoading\r\n+                ? const Center(child: CircularProgressIndicator())\r\n+                : Column(\r\n+                  mainAxisAlignment: MainAxisAlignment.center,\r\n+                  children: [\r\n+                    TextField(\r\n+                      controller: _emailController,\r\n+                      decoration: const InputDecoration(labelText: \"Email\"),\r\n+                    ),\r\n+                    const SizedBox(height: 10),\r\n+                    TextField(\r\n+                      controller: _passwordController,\r\n+                      obscureText: true,\r\n+                      decoration: const InputDecoration(labelText: \"Password\"),\r\n+                    ),\r\n+                    const SizedBox(height: 20),\r\n+                    ElevatedButton(\r\n+                      onPressed: _signInWithEmail,\r\n+                      child: const Text(\"Login with Email\"),\r\n+                    ),\r\n+                    const SizedBox(height: 20),\r\n+                    ElevatedButton.icon(\r\n+                      icon: Image.asset('assets/google-logo.png', height: 24),\r\n+                      onPressed: _signInWithGoogle,\r\n+                      label: const Text(\"Sign in with Google\"),\r\n+                      style: ElevatedButton.styleFrom(\r\n+                        backgroundColor: Colors.white,\r\n+                        foregroundColor: Colors.black,\r\n+                      ),\r\n+                    ),\r\n+                  ],\r\n+                ),\r\n       ),\r\n     );\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1744892159740,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,27 +2,8 @@\n import 'package:firebase_auth/firebase_auth.dart';\r\n import 'package:google_sign_in/google_sign_in.dart';\r\n import 'package:firebase_core/firebase_core.dart';\r\n \r\n-void main() async {\r\n-  WidgetsFlutterBinding.ensureInitialized();\r\n-  await Firebase.initializeApp();\r\n-  runApp(const MyApp());\r\n-}\r\n-\r\n-class MyApp extends StatelessWidget {\r\n-  const MyApp({super.key});\r\n-\r\n-  @override\r\n-  Widget build(BuildContext context) {\r\n-    return MaterialApp(\r\n-      title: 'Firebase Login',\r\n-      theme: ThemeData(primarySwatch: Colors.blue),\r\n-      home: const LoginPage(),\r\n-    );\r\n-  }\r\n-}\r\n-\r\n class LoginPage extends StatefulWidget {\r\n   const LoginPage({super.key});\r\n \r\n   @override\r\n"
                },
                {
                    "date": 1744892191869,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,7 @@\n import 'package:flutter/material.dart';\r\n import 'package:firebase_auth/firebase_auth.dart';\r\n import 'package:google_sign_in/google_sign_in.dart';\r\n-import 'package:firebase_core/firebase_core.dart';\r\n \r\n class LoginPage extends StatefulWidget {\r\n   const LoginPage({super.key});\r\n \r\n"
                },
                {
                    "date": 1744892338237,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import 'package:flutter/material.dart';\r\n import 'package:firebase_auth/firebase_auth.dart';\r\n import 'package:google_sign_in/google_sign_in.dart';\r\n+import 'package:firebase_core/firebase_core.dart';\r\n \r\n class LoginPage extends StatefulWidget {\r\n   const LoginPage({super.key});\r\n \r\n"
                },
                {
                    "date": 1744892411686,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,7 @@\n import 'package:flutter/material.dart';\r\n import 'package:firebase_auth/firebase_auth.dart';\r\n import 'package:google_sign_in/google_sign_in.dart';\r\n-import 'package:firebase_core/firebase_core.dart';\r\n \r\n class LoginPage extends StatefulWidget {\r\n   const LoginPage({super.key});\r\n \r\n"
                },
                {
                    "date": 1744892569742,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,9 @@\n                       child: const Text(\"Login with Email\"),\r\n                     ),\r\n                     const SizedBox(height: 20),\r\n                     ElevatedButton.icon(\r\n-                      icon: Image.asset('assets/google-logo.png', height: 24),\r\n+                      icon: const Icon(Icons.g_mobiledata, size: 24),\r\n                       onPressed: _signInWithGoogle,\r\n                       label: const Text(\"Sign in with Google\"),\r\n                       style: ElevatedButton.styleFrom(\r\n                         backgroundColor: Colors.white,\r\n"
                },
                {
                    "date": 1744892897836,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,16 +90,20 @@\n                       child: const Text(\"Login with Email\"),\r\n                     ),\r\n                     const SizedBox(height: 20),\r\n                     ElevatedButton.icon(\r\n-                      icon: const Icon(Icons.g_mobiledata, size: 24),\r\n-                      onPressed: _signInWithGoogle,\r\n-                      label: const Text(\"Sign in with Google\"),\r\n-                      style: ElevatedButton.styleFrom(\r\n-                        backgroundColor: Colors.white,\r\n-                        foregroundColor: Colors.black,\r\n-                      ),\r\n-                    ),\r\n+  icon: const Icon(Icons.g_mobiledata, size: 28, color: Colors.red),\r\n+  onPressed: _signInWithGoogle,\r\n+  label: const Text(\"Sign in with Google\"),\r\n+  style: ElevatedButton.styleFrom(\r\n+    backgroundColor: Colors.white,\r\n+    foregroundColor: Colors.black,\r\n+    padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 12),\r\n+    textStyle: const TextStyle(fontSize: 16),\r\n+    elevation: 2,\r\n+  ),\r\n+),\r\n+\r\n                   ],\r\n                 ),\r\n       ),\r\n     );\r\n"
                },
                {
                    "date": 1744893002679,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,111 +1,107 @@\n-import 'package:flutter/material.dart';\r\n-import 'package:firebase_auth/firebase_auth.dart';\r\n-import 'package:google_sign_in/google_sign_in.dart';\r\n-\r\n-class LoginPage extends StatefulWidget {\r\n-  const LoginPage({super.key});\r\n-\r\n-  @override\r\n-  State<LoginPage> createState() => _LoginPageState();\r\n-}\r\n-\r\n-class _LoginPageState extends State<LoginPage> {\r\n-  final _emailController = TextEditingController();\r\n-  final _passwordController = TextEditingController();\r\n-\r\n-  bool _isLoading = false;\r\n-\r\n-  Future<void> _signInWithEmail() async {\r\n-    setState(() => _isLoading = true);\r\n-    try {\r\n-      await FirebaseAuth.instance.signInWithEmailAndPassword(\r\n-        email: _emailController.text.trim(),\r\n-        password: _passwordController.text.trim(),\r\n-      );\r\n-      _showMessage(\"Signed in with Email!\");\r\n-    } on FirebaseAuthException catch (e) {\r\n-      _showMessage(e.message ?? \"Failed to sign in.\");\r\n-    } finally {\r\n-      setState(() => _isLoading = false);\r\n-    }\r\n-  }\r\n-\r\n-  Future<void> _signInWithGoogle() async {\r\n-    setState(() => _isLoading = true);\r\n-    try {\r\n-      final GoogleSignInAccount? googleUser = await GoogleSignIn().signIn();\r\n-      if (googleUser == null) {\r\n-        _showMessage(\"Google Sign-In cancelled.\");\r\n-        setState(() => _isLoading = false);\r\n-        return;\r\n-      }\r\n-\r\n-      final googleAuth = await googleUser.authentication;\r\n-\r\n-      final credential = GoogleAuthProvider.credential(\r\n-        accessToken: googleAuth.accessToken,\r\n-        idToken: googleAuth.idToken,\r\n-      );\r\n-\r\n-      await FirebaseAuth.instance.signInWithCredential(credential);\r\n-      _showMessage(\"Signed in with Google!\");\r\n-    } catch (e) {\r\n-      _showMessage(\"Google Sign-In failed.\");\r\n-    } finally {\r\n-      setState(() => _isLoading = false);\r\n-    }\r\n-  }\r\n-\r\n-  void _showMessage(String message) {\r\n-    ScaffoldMessenger.of(\r\n-      context,\r\n-    ).showSnackBar(SnackBar(content: Text(message)));\r\n-  }\r\n-\r\n-  @override\r\n-  Widget build(BuildContext context) {\r\n-    return Scaffold(\r\n-      appBar: AppBar(title: const Text(\"Login\")),\r\n-      body: Padding(\r\n-        padding: const EdgeInsets.all(20.0),\r\n-        child:\r\n-            _isLoading\r\n-                ? const Center(child: CircularProgressIndicator())\r\n-                : Column(\r\n-                  mainAxisAlignment: MainAxisAlignment.center,\r\n-                  children: [\r\n-                    TextField(\r\n-                      controller: _emailController,\r\n-                      decoration: const InputDecoration(labelText: \"Email\"),\r\n-                    ),\r\n-                    const SizedBox(height: 10),\r\n-                    TextField(\r\n-                      controller: _passwordController,\r\n-                      obscureText: true,\r\n-                      decoration: const InputDecoration(labelText: \"Password\"),\r\n-                    ),\r\n-                    const SizedBox(height: 20),\r\n-                    ElevatedButton(\r\n-                      onPressed: _signInWithEmail,\r\n-                      child: const Text(\"Login with Email\"),\r\n-                    ),\r\n-                    const SizedBox(height: 20),\r\n-                    ElevatedButton.icon(\r\n-  icon: const Icon(Icons.g_mobiledata, size: 28, color: Colors.red),\r\n-  onPressed: _signInWithGoogle,\r\n-  label: const Text(\"Sign in with Google\"),\r\n-  style: ElevatedButton.styleFrom(\r\n-    backgroundColor: Colors.white,\r\n-    foregroundColor: Colors.black,\r\n-    padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 12),\r\n-    textStyle: const TextStyle(fontSize: 16),\r\n-    elevation: 2,\r\n-  ),\r\n-),\r\n-\r\n-                  ],\r\n-                ),\r\n-      ),\r\n-    );\r\n-  }\r\n-}\r\n+import 'package:flutter/material.dart';\n+import 'package:firebase_auth/firebase_auth.dart';\n+import 'package:google_sign_in/google_sign_in.dart';\n+\n+class LoginPage extends StatefulWidget {\n+  const LoginPage({super.key});\n+\n+  @override\n+  State<LoginPage> createState() => _LoginPageState();\n+}\n+\n+class _LoginPageState extends State<LoginPage> {\n+  final _emailController = TextEditingController();\n+  final _passwordController = TextEditingController();\n+\n+  bool _isLoading = false;\n+\n+  Future<void> _signInWithEmail() async {\n+    setState(() => _isLoading = true);\n+    try {\n+      await FirebaseAuth.instance.signInWithEmailAndPassword(\n+        email: _emailController.text.trim(),\n+        password: _passwordController.text.trim(),\n+      );\n+      _showMessage(\"Signed in with Email!\");\n+    } on FirebaseAuthException catch (e) {\n+      _showMessage(e.message ?? \"Failed to sign in.\");\n+    } finally {\n+      setState(() => _isLoading = false);\n+    }\n+  }\n+\n+  Future<void> _signInWithGoogle() async {\n+    setState(() => _isLoading = true);\n+    try {\n+      final GoogleSignInAccount? googleUser = await GoogleSignIn().signIn();\n+      if (googleUser == null) {\n+        _showMessage(\"Google Sign-In cancelled.\");\n+        setState(() => _isLoading = false);\n+        return;\n+      }\n+\n+      final googleAuth = await googleUser.authentication;\n+\n+      final credential = GoogleAuthProvider.credential(\n+        accessToken: googleAuth.accessToken,\n+        idToken: googleAuth.idToken,\n+      );\n+\n+      await FirebaseAuth.instance.signInWithCredential(credential);\n+      _showMessage(\"Signed in with Google!\");\n+    } catch (e) {\n+      _showMessage(\"Google Sign-In failed.\");\n+    } finally {\n+      setState(() => _isLoading = false);\n+    }\n+  }\n+\n+  void _showMessage(String message) {\n+    ScaffoldMessenger.of(\n+      context,\n+    ).showSnackBar(SnackBar(content: Text(message)));\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      appBar: AppBar(title: const Text(\"Login\")),\n+      body: Padding(\n+        padding: const EdgeInsets.all(20.0),\n+        child:\n+            _isLoading\n+                ? const Center(child: CircularProgressIndicator())\n+                : Column(\n+                  mainAxisAlignment: MainAxisAlignment.center,\n+                  children: [\n+                    TextField(\n+                      controller: _emailController,\n+                      decoration: const InputDecoration(labelText: \"Email\"),\n+                    ),\n+                    const SizedBox(height: 10),\n+                    TextField(\n+                      controller: _passwordController,\n+                      obscureText: true,\n+                      decoration: const InputDecoration(labelText: \"Password\"),\n+                    ),\n+                    const SizedBox(height: 20),\n+                    ElevatedButton(\n+                      onPressed: _signInWithEmail,\n+                      child: const Text(\"Login with Email\"),\n+                    ),\n+                    const SizedBox(height: 20),\n+                    ElevatedButton.icon(\n+                      icon: Image.asset('assets/google-logo.png', height: 24),\n+                      onPressed: _signInWithGoogle,\n+                      label: const Text(\"Sign in with Google\"),\n+                      style: ElevatedButton.styleFrom(\n+                        backgroundColor: Colors.white,\n+                        foregroundColor: Colors.black,\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+      ),\n+    );\n+  }\n+}\n"
                },
                {
                    "date": 1744893206617,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import 'package:flutter/material.dart';\n import 'package:firebase_auth/firebase_auth.dart';\n import 'package:google_sign_in/google_sign_in.dart';\n \n-class LoginPage extends StatefulWidget {\n+class LoginScreen extends StatefulWidget {\n   const LoginPage({super.key});\n \n   @override\n   State<LoginPage> createState() => _LoginPageState();\n"
                },
                {
                    "date": 1744893212366,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import 'package:firebase_auth/firebase_auth.dart';\n import 'package:google_sign_in/google_sign_in.dart';\n \n class LoginScreen extends StatefulWidget {\n-  const LoginPage({super.key});\n+  const LoginScreen({super.key});\n \n   @override\n   State<LoginPage> createState() => _LoginPageState();\n }\n"
                },
                {
                    "date": 1744893218141,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n   @override\n   State<LoginPage> createState() => _LoginPageState();\n }\n \n-class _LoginPageState extends State<LoginPage> {\n+class _LoginPageState extends State<LoginScreen> {\n   final _emailController = TextEditingController();\n   final _passwordController = TextEditingController();\n \n   bool _isLoading = false;\n"
                },
                {
                    "date": 1744893410115,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n class LoginScreen extends StatefulWidget {\n   const LoginScreen({super.key});\n \n   @override\n-  State<LoginPage> createState() => _LoginPageState();\n+  State<LoginScreen> createState() => _LoginPageState();\n }\n \n class _LoginPageState extends State<LoginScreen> {\n   final _emailController = TextEditingController();\n@@ -90,16 +90,20 @@\n                       child: const Text(\"Login with Email\"),\n                     ),\n                     const SizedBox(height: 20),\n                     ElevatedButton.icon(\n-                      icon: Image.asset('assets/google-logo.png', height: 24),\n-                      onPressed: _signInWithGoogle,\n-                      label: const Text(\"Sign in with Google\"),\n-                      style: ElevatedButton.styleFrom(\n-                        backgroundColor: Colors.white,\n-                        foregroundColor: Colors.black,\n-                      ),\n-                    ),\n+  icon: const Icon(Icons.g_mobiledata, size: 28, color: Colors.red),\n+  onPressed: _signInWithGoogle,\n+  label: const Text(\"Sign in with Google\"),\n+  style: ElevatedButton.styleFrom(\n+    backgroundColor: Colors.white,\n+    foregroundColor: Colors.black,\n+    padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 12),\n+    textStyle: const TextStyle(fontSize: 16),\n+    elevation: 2,\n+  ),\n+),\n+\n                   ],\n                 ),\n       ),\n     );\n"
                },
                {
                    "date": 1744893570702,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,18 @@\n import 'package:flutter/material.dart';\n import 'package:firebase_auth/firebase_auth.dart';\n import 'package:google_sign_in/google_sign_in.dart';\n \n-class LoginScreen extends StatefulWidget {\n-  const LoginScreen({super.key});\n+import 'register_page.dart'; // <-- Make sure this import is added\n \n+class LoginPage extends StatefulWidget {\n+  const LoginPage({super.key});\n+\n   @override\n-  State<LoginScreen> createState() => _LoginPageState();\n+  State<LoginPage> createState() => _LoginPageState();\n }\n \n-class _LoginPageState extends State<LoginScreen> {\n+class _LoginPageState extends State<LoginPage> {\n   final _emailController = TextEditingController();\n   final _passwordController = TextEditingController();\n \n   bool _isLoading = false;\n@@ -67,45 +69,50 @@\n     return Scaffold(\n       appBar: AppBar(title: const Text(\"Login\")),\n       body: Padding(\n         padding: const EdgeInsets.all(20.0),\n-        child:\n-            _isLoading\n-                ? const Center(child: CircularProgressIndicator())\n-                : Column(\n-                  mainAxisAlignment: MainAxisAlignment.center,\n-                  children: [\n-                    TextField(\n-                      controller: _emailController,\n-                      decoration: const InputDecoration(labelText: \"Email\"),\n+        child: _isLoading\n+            ? const Center(child: CircularProgressIndicator())\n+            : Column(\n+                mainAxisAlignment: MainAxisAlignment.center,\n+                children: [\n+                  TextField(\n+                    controller: _emailController,\n+                    decoration: const InputDecoration(labelText: \"Email\"),\n+                  ),\n+                  const SizedBox(height: 10),\n+                  TextField(\n+                    controller: _passwordController,\n+                    obscureText: true,\n+                    decoration: const InputDecoration(labelText: \"Password\"),\n+                  ),\n+                  const SizedBox(height: 20),\n+                  ElevatedButton(\n+                    onPressed: _signInWithEmail,\n+                    child: const Text(\"Login with Email\"),\n+                  ),\n+                  const SizedBox(height: 20),\n+                  ElevatedButton.icon(\n+                    icon: const Icon(Icons.g_mobiledata, size: 28, color: Colors.red),\n+                    onPressed: _signInWithGoogle,\n+                    label: const Text(\"Sign in with Google\"),\n+                    style: ElevatedButton.styleFrom(\n+                      backgroundColor: Colors.white,\n+                      foregroundColor: Colors.black,\n                     ),\n-                    const SizedBox(height: 10),\n-                    TextField(\n-                      controller: _passwordController,\n-                      obscureText: true,\n-                      decoration: const InputDecoration(labelText: \"Password\"),\n-                    ),\n-                    const SizedBox(height: 20),\n-                    ElevatedButton(\n-                      onPressed: _signInWithEmail,\n-                      child: const Text(\"Login with Email\"),\n-                    ),\n-                    const SizedBox(height: 20),\n-                    ElevatedButton.icon(\n-  icon: const Icon(Icons.g_mobiledata, size: 28, color: Colors.red),\n-  onPressed: _signInWithGoogle,\n-  label: const Text(\"Sign in with Google\"),\n-  style: ElevatedButton.styleFrom(\n-    backgroundColor: Colors.white,\n-    foregroundColor: Colors.black,\n-    padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 12),\n-    textStyle: const TextStyle(fontSize: 16),\n-    elevation: 2,\n-  ),\n-),\n-\n-                  ],\n-                ),\n+                  ),\n+                  const SizedBox(height: 20),\n+                  TextButton(\n+                    onPressed: () {\n+                      Navigator.push(\n+                        context,\n+                        MaterialPageRoute(builder: (_) => const RegisterPage()),\n+                      );\n+                    },\n+                    child: const Text(\"Don't have an account? Register\"),\n+                  ),\n+                ],\n+              ),\n       ),\n     );\n   }\n }\n"
                },
                {
                    "date": 1744893588543,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,10 @@\n import 'package:google_sign_in/google_sign_in.dart';\n \n import 'register_page.dart'; // <-- Make sure this import is added\n \n-class LoginPage extends StatefulWidget {\n+class LoginScree\n+ extends StatefulWidget {\n   const LoginPage({super.key});\n \n   @override\n   State<LoginPage> createState() => _LoginPageState();\n"
                },
                {
                    "date": 1744893599202,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,11 +3,10 @@\n import 'package:google_sign_in/google_sign_in.dart';\n \n import 'register_page.dart'; // <-- Make sure this import is added\n \n-class LoginScree\n- extends StatefulWidget {\n-  const LoginPage({super.key});\n+class LoginScreen extends StatefulWidget {\n+  const LoginScreen({super.key});\n \n   @override\n   State<LoginPage> createState() => _LoginPageState();\n }\n"
                },
                {
                    "date": 1744893607824,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,12 +7,12 @@\n class LoginScreen extends StatefulWidget {\n   const LoginScreen({super.key});\n \n   @override\n-  State<LoginPage> createState() => _LoginPageState();\n+  State<LoginScreen> createState() => _LoginPageState();\n }\n \n-class _LoginPageState extends State<LoginPage> {\n+class _LoginPageState extends State<LoginScreen> {\n   final _emailController = TextEditingController();\n   final _passwordController = TextEditingController();\n \n   bool _isLoading = false;\n"
                },
                {
                    "date": 1744893614361,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import 'package:flutter/material.dart';\n import 'package:firebase_auth/firebase_auth.dart';\n import 'package:google_sign_in/google_sign_in.dart';\n \n-import 'register_page.dart'; // <-- Make sure this import is added\n+import 'register_page.dart'; \n \n class LoginScreen extends StatefulWidget {\n   const LoginScreen({super.key});\n \n"
                },
                {
                    "date": 1744894141950,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,10 @@\n import 'package:flutter/material.dart';\n import 'package:firebase_auth/firebase_auth.dart';\n import 'package:google_sign_in/google_sign_in.dart';\n+import 'package:drivenotes/features/notes/presentation/screens/notes_screen.dart';\n \n-import 'register_page.dart'; \n+import 'register_page.dart';\n \n class LoginScreen extends StatefulWidget {\n   const LoginScreen({super.key});\n \n@@ -16,16 +17,23 @@\n   final _passwordController = TextEditingController();\n \n   bool _isLoading = false;\n \n+  void _navigateToMainApp() {\n+    Navigator.of(\n+      context,\n+    ).pushReplacement(MaterialPageRoute(builder: (_) => const NotesScreen()));\n+  }\n+\n   Future<void> _signInWithEmail() async {\n     setState(() => _isLoading = true);\n     try {\n       await FirebaseAuth.instance.signInWithEmailAndPassword(\n         email: _emailController.text.trim(),\n         password: _passwordController.text.trim(),\n       );\n       _showMessage(\"Signed in with Email!\");\n+      _navigateToMainApp();\n     } on FirebaseAuthException catch (e) {\n       _showMessage(e.message ?? \"Failed to sign in.\");\n     } finally {\n       setState(() => _isLoading = false);\n@@ -50,8 +58,9 @@\n       );\n \n       await FirebaseAuth.instance.signInWithCredential(credential);\n       _showMessage(\"Signed in with Google!\");\n+      _navigateToMainApp();\n     } catch (e) {\n       _showMessage(\"Google Sign-In failed.\");\n     } finally {\n       setState(() => _isLoading = false);\n@@ -69,50 +78,57 @@\n     return Scaffold(\n       appBar: AppBar(title: const Text(\"Login\")),\n       body: Padding(\n         padding: const EdgeInsets.all(20.0),\n-        child: _isLoading\n-            ? const Center(child: CircularProgressIndicator())\n-            : Column(\n-                mainAxisAlignment: MainAxisAlignment.center,\n-                children: [\n-                  TextField(\n-                    controller: _emailController,\n-                    decoration: const InputDecoration(labelText: \"Email\"),\n-                  ),\n-                  const SizedBox(height: 10),\n-                  TextField(\n-                    controller: _passwordController,\n-                    obscureText: true,\n-                    decoration: const InputDecoration(labelText: \"Password\"),\n-                  ),\n-                  const SizedBox(height: 20),\n-                  ElevatedButton(\n-                    onPressed: _signInWithEmail,\n-                    child: const Text(\"Login with Email\"),\n-                  ),\n-                  const SizedBox(height: 20),\n-                  ElevatedButton.icon(\n-                    icon: const Icon(Icons.g_mobiledata, size: 28, color: Colors.red),\n-                    onPressed: _signInWithGoogle,\n-                    label: const Text(\"Sign in with Google\"),\n-                    style: ElevatedButton.styleFrom(\n-                      backgroundColor: Colors.white,\n-                      foregroundColor: Colors.black,\n+        child:\n+            _isLoading\n+                ? const Center(child: CircularProgressIndicator())\n+                : Column(\n+                  mainAxisAlignment: MainAxisAlignment.center,\n+                  children: [\n+                    TextField(\n+                      controller: _emailController,\n+                      decoration: const InputDecoration(labelText: \"Email\"),\n                     ),\n-                  ),\n-                  const SizedBox(height: 20),\n-                  TextButton(\n-                    onPressed: () {\n-                      Navigator.push(\n-                        context,\n-                        MaterialPageRoute(builder: (_) => const RegisterPage()),\n-                      );\n-                    },\n-                    child: const Text(\"Don't have an account? Register\"),\n-                  ),\n-                ],\n-              ),\n+                    const SizedBox(height: 10),\n+                    TextField(\n+                      controller: _passwordController,\n+                      obscureText: true,\n+                      decoration: const InputDecoration(labelText: \"Password\"),\n+                    ),\n+                    const SizedBox(height: 20),\n+                    ElevatedButton(\n+                      onPressed: _signInWithEmail,\n+                      child: const Text(\"Login with Email\"),\n+                    ),\n+                    const SizedBox(height: 20),\n+                    ElevatedButton.icon(\n+                      icon: const Icon(\n+                        Icons.g_mobiledata,\n+                        size: 28,\n+                        color: Colors.red,\n+                      ),\n+                      onPressed: _signInWithGoogle,\n+                      label: const Text(\"Sign in with Google\"),\n+                      style: ElevatedButton.styleFrom(\n+                        backgroundColor: Colors.white,\n+                        foregroundColor: Colors.black,\n+                      ),\n+                    ),\n+                    const SizedBox(height: 20),\n+                    TextButton(\n+                      onPressed: () {\n+                        Navigator.push(\n+                          context,\n+                          MaterialPageRoute(\n+                            builder: (_) => const RegisterPage(),\n+                          ),\n+                        );\n+                      },\n+                      child: const Text(\"Don't have an account? Register\"),\n+                    ),\n+                  ],\n+                ),\n       ),\n     );\n   }\n }\n"
                },
                {
                    "date": 1744894934859,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import 'package:flutter/material.dart';\n import 'package:firebase_auth/firebase_auth.dart';\n import 'package:google_sign_in/google_sign_in.dart';\n-import 'package:drivenotes/features/notes/presentation/screens/notes_screen.dart';\n \n+\n import 'register_page.dart';\n \n class LoginScreen extends StatefulWidget {\n   const LoginScreen({super.key});\n"
                },
                {
                    "date": 1744895486166,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,19 +1,21 @@\n import 'package:flutter/material.dart';\n import 'package:firebase_auth/firebase_auth.dart';\n import 'package:google_sign_in/google_sign_in.dart';\n+import 'package:drivenotes/features/notes/presentation/screens/notes_screen.dart';\n+import 'package:drivenotes/features/auth/data/services/auth_service.dart';\n+import 'package:flutter_riverpod/flutter_riverpod.dart';\n \n-\n import 'register_page.dart';\n \n-class LoginScreen extends StatefulWidget {\n+class LoginScreen extends ConsumerStatefulWidget {\n   const LoginScreen({super.key});\n \n   @override\n-  State<LoginScreen> createState() => _LoginPageState();\n+  ConsumerState<LoginScreen> createState() => _LoginPageState();\n }\n \n-class _LoginPageState extends State<LoginScreen> {\n+class _LoginPageState extends ConsumerState<LoginScreen> {\n   final _emailController = TextEditingController();\n   final _passwordController = TextEditingController();\n \n   bool _isLoading = false;\n@@ -42,27 +44,14 @@\n \n   Future<void> _signInWithGoogle() async {\n     setState(() => _isLoading = true);\n     try {\n-      final GoogleSignInAccount? googleUser = await GoogleSignIn().signIn();\n-      if (googleUser == null) {\n-        _showMessage(\"Google Sign-In cancelled.\");\n-        setState(() => _isLoading = false);\n-        return;\n-      }\n-\n-      final googleAuth = await googleUser.authentication;\n-\n-      final credential = GoogleAuthProvider.credential(\n-        accessToken: googleAuth.accessToken,\n-        idToken: googleAuth.idToken,\n-      );\n-\n-      await FirebaseAuth.instance.signInWithCredential(credential);\n+      final authService = ref.read(authServiceProvider);\n+      await authService.signIn();\n       _showMessage(\"Signed in with Google!\");\n       _navigateToMainApp();\n     } catch (e) {\n-      _showMessage(\"Google Sign-In failed.\");\n+      _showMessage(\"Google Sign-In failed: $e\");\n     } finally {\n       setState(() => _isLoading = false);\n     }\n   }\n"
                },
                {
                    "date": 1744895656710,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,21 +1,18 @@\n import 'package:flutter/material.dart';\n import 'package:firebase_auth/firebase_auth.dart';\n import 'package:google_sign_in/google_sign_in.dart';\n-import 'package:drivenotes/features/notes/presentation/screens/notes_screen.dart';\n-import 'package:drivenotes/features/auth/data/services/auth_service.dart';\n-import 'package:flutter_riverpod/flutter_riverpod.dart';\n \n import 'register_page.dart';\n \n-class LoginScreen extends ConsumerStatefulWidget {\n+class LoginScreen extends StatefulWidget {\n   const LoginScreen({super.key});\n \n   @override\n-  ConsumerState<LoginScreen> createState() => _LoginPageState();\n+  State<LoginScreen> createState() => _LoginPageState();\n }\n \n-class _LoginPageState extends ConsumerState<LoginScreen> {\n+class _LoginPageState extends State<LoginScreen> {\n   final _emailController = TextEditingController();\n   final _passwordController = TextEditingController();\n \n   bool _isLoading = false;\n@@ -44,14 +41,27 @@\n \n   Future<void> _signInWithGoogle() async {\n     setState(() => _isLoading = true);\n     try {\n-      final authService = ref.read(authServiceProvider);\n-      await authService.signIn();\n+      final GoogleSignInAccount? googleUser = await GoogleSignIn().signIn();\n+      if (googleUser == null) {\n+        _showMessage(\"Google Sign-In cancelled.\");\n+        setState(() => _isLoading = false);\n+        return;\n+      }\n+\n+      final googleAuth = await googleUser.authentication;\n+\n+      final credential = GoogleAuthProvider.credential(\n+        accessToken: googleAuth.accessToken,\n+        idToken: googleAuth.idToken,\n+      );\n+\n+      await FirebaseAuth.instance.signInWithCredential(credential);\n       _showMessage(\"Signed in with Google!\");\n       _navigateToMainApp();\n     } catch (e) {\n-      _showMessage(\"Google Sign-In failed: $e\");\n+      _showMessage(\"Google Sign-In failed.\");\n     } finally {\n       setState(() => _isLoading = false);\n     }\n   }\n"
                },
                {
                    "date": 1744895801376,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,38 +1,31 @@\n import 'package:flutter/material.dart';\n import 'package:firebase_auth/firebase_auth.dart';\n import 'package:google_sign_in/google_sign_in.dart';\n \n-import 'register_page.dart';\n+import '../notes/notes_list_page.dart';\n \n-class LoginScreen extends StatefulWidget {\n-  const LoginScreen({super.key});\n+class LoginPage extends StatefulWidget {\n+  const LoginPage({super.key});\n \n   @override\n-  State<LoginScreen> createState() => _LoginPageState();\n+  State<LoginPage> createState() => _LoginPageState();\n }\n \n-class _LoginPageState extends State<LoginScreen> {\n+class _LoginPageState extends State<LoginPage> {\n   final _emailController = TextEditingController();\n   final _passwordController = TextEditingController();\n \n   bool _isLoading = false;\n \n-  void _navigateToMainApp() {\n-    Navigator.of(\n-      context,\n-    ).pushReplacement(MaterialPageRoute(builder: (_) => const NotesScreen()));\n-  }\n-\n   Future<void> _signInWithEmail() async {\n     setState(() => _isLoading = true);\n     try {\n       await FirebaseAuth.instance.signInWithEmailAndPassword(\n         email: _emailController.text.trim(),\n         password: _passwordController.text.trim(),\n       );\n-      _showMessage(\"Signed in with Email!\");\n-      _navigateToMainApp();\n+      _navigateToNotes();\n     } on FirebaseAuthException catch (e) {\n       _showMessage(e.message ?? \"Failed to sign in.\");\n     } finally {\n       setState(() => _isLoading = false);\n@@ -41,93 +34,82 @@\n \n   Future<void> _signInWithGoogle() async {\n     setState(() => _isLoading = true);\n     try {\n-      final GoogleSignInAccount? googleUser = await GoogleSignIn().signIn();\n+      final googleUser = await GoogleSignIn().signIn();\n       if (googleUser == null) {\n         _showMessage(\"Google Sign-In cancelled.\");\n-        setState(() => _isLoading = false);\n         return;\n       }\n-\n-      final googleAuth = await googleUser.authentication;\n-\n-      final credential = GoogleAuthProvider.credential(\n-        accessToken: googleAuth.accessToken,\n-        idToken: googleAuth.idToken,\n+      final auth = await googleUser.authentication;\n+      final cred = GoogleAuthProvider.credential(\n+        accessToken: auth.accessToken,\n+        idToken: auth.idToken,\n       );\n-\n-      await FirebaseAuth.instance.signInWithCredential(credential);\n-      _showMessage(\"Signed in with Google!\");\n-      _navigateToMainApp();\n+      await FirebaseAuth.instance.signInWithCredential(cred);\n+      _navigateToNotes();\n     } catch (e) {\n       _showMessage(\"Google Sign-In failed.\");\n     } finally {\n       setState(() => _isLoading = false);\n     }\n   }\n \n-  void _showMessage(String message) {\n-    ScaffoldMessenger.of(\n-      context,\n-    ).showSnackBar(SnackBar(content: Text(message)));\n+  void _navigateToNotes() {\n+    Navigator.of(context).pushReplacement(\n+      MaterialPageRoute(builder: (_) => const NotesListPage()),\n+    );\n   }\n \n+  void _showMessage(String msg) {\n+    ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text(msg)));\n+  }\n+\n   @override\n   Widget build(BuildContext context) {\n     return Scaffold(\n       appBar: AppBar(title: const Text(\"Login\")),\n       body: Padding(\n-        padding: const EdgeInsets.all(20.0),\n-        child:\n-            _isLoading\n-                ? const Center(child: CircularProgressIndicator())\n-                : Column(\n-                  mainAxisAlignment: MainAxisAlignment.center,\n-                  children: [\n-                    TextField(\n-                      controller: _emailController,\n-                      decoration: const InputDecoration(labelText: \"Email\"),\n+        padding: const EdgeInsets.all(20),\n+        child: _isLoading\n+            ? const Center(child: CircularProgressIndicator())\n+            : Column(\n+                mainAxisAlignment: MainAxisAlignment.center,\n+                children: [\n+                  TextField(\n+                    controller: _emailController,\n+                    decoration: const InputDecoration(labelText: \"Email\"),\n+                  ),\n+                  const SizedBox(height: 10),\n+                  TextField(\n+                    controller: _passwordController,\n+                    obscureText: true,\n+                    decoration: const InputDecoration(labelText: \"Password\"),\n+                  ),\n+                  const SizedBox(height: 20),\n+                  ElevatedButton(\n+                    onPressed: _signInWithEmail,\n+                    child: const Text(\"Login with Email\"),\n+                  ),\n+                  const SizedBox(height: 20),\n+                  ElevatedButton.icon(\n+                    icon: const Icon(Icons.g_mobiledata, size: 28, color: Colors.red),\n+                    onPressed: _signInWithGoogle,\n+                    label: const Text(\"Sign in with Google\"),\n+                    style: ElevatedButton.styleFrom(\n+                      backgroundColor: Colors.white,\n+                      foregroundColor: Colors.black,\n                     ),\n-                    const SizedBox(height: 10),\n-                    TextField(\n-                      controller: _passwordController,\n-                      obscureText: true,\n-                      decoration: const InputDecoration(labelText: \"Password\"),\n-                    ),\n-                    const SizedBox(height: 20),\n-                    ElevatedButton(\n-                      onPressed: _signInWithEmail,\n-                      child: const Text(\"Login with Email\"),\n-                    ),\n-                    const SizedBox(height: 20),\n-                    ElevatedButton.icon(\n-                      icon: const Icon(\n-                        Icons.g_mobiledata,\n-                        size: 28,\n-                        color: Colors.red,\n-                      ),\n-                      onPressed: _signInWithGoogle,\n-                      label: const Text(\"Sign in with Google\"),\n-                      style: ElevatedButton.styleFrom(\n-                        backgroundColor: Colors.white,\n-                        foregroundColor: Colors.black,\n-                      ),\n-                    ),\n-                    const SizedBox(height: 20),\n-                    TextButton(\n-                      onPressed: () {\n-                        Navigator.push(\n-                          context,\n-                          MaterialPageRoute(\n-                            builder: (_) => const RegisterPage(),\n-                          ),\n-                        );\n-                      },\n-                      child: const Text(\"Don't have an account? Register\"),\n-                    ),\n-                  ],\n-                ),\n+                  ),\n+                  const SizedBox(height: 20),\n+                  TextButton(\n+                    onPressed: () {\n+                      // if you have a register page:\n+                    },\n+                    child: const Text(\"Don't have an account? Register\"),\n+                  ),\n+                ],\n+              ),\n       ),\n     );\n   }\n }\n"
                },
                {
                    "date": 1744895844016,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import 'package:google_sign_in/google_sign_in.dart';\n \n import '../notes/notes_list_page.dart';\n \n-class LoginPage extends StatefulWidget {\n+class LoginScree extends StatefulWidget {\n   const LoginPage({super.key});\n \n   @override\n   State<LoginPage> createState() => _LoginPageState();\n"
                },
                {
                    "date": 1744895850139,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,10 +3,10 @@\n import 'package:google_sign_in/google_sign_in.dart';\n \n import '../notes/notes_list_page.dart';\n \n-class LoginScree extends StatefulWidget {\n-  const LoginPage({super.key});\n+class LoginScreen extends StatefulWidget {\n+  const LoginScreen({super.key});\n \n   @override\n   State<LoginPage> createState() => _LoginPageState();\n }\n"
                },
                {
                    "date": 1744895857245,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n class LoginScreen extends StatefulWidget {\n   const LoginScreen({super.key});\n \n   @override\n-  State<LoginPage> createState() => _LoginPageState();\n+  State<LoginScreen> createState() => _LoginPageState();\n }\n \n class _LoginPageState extends State<LoginPage> {\n   final _emailController = TextEditingController();\n"
                },
                {
                    "date": 1744895862537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n   @override\n   State<LoginScreen> createState() => _LoginPageState();\n }\n \n-class _LoginPageState extends State<LoginPage> {\n+class _LoginPageState extends State<LoginSC> {\n   final _emailController = TextEditingController();\n   final _passwordController = TextEditingController();\n \n   bool _isLoading = false;\n"
                },
                {
                    "date": 1744895874220,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,18 +1,19 @@\n+import 'package:drivenotes/notes_list_page.dart';\n import 'package:flutter/material.dart';\n import 'package:firebase_auth/firebase_auth.dart';\n import 'package:google_sign_in/google_sign_in.dart';\n \n-import '../notes/notes_list_page.dart';\n \n+\n class LoginScreen extends StatefulWidget {\n   const LoginScreen({super.key});\n \n   @override\n   State<LoginScreen> createState() => _LoginPageState();\n }\n \n-class _LoginPageState extends State<LoginSC> {\n+class _LoginPageState extends State<LoginScreen> {\n   final _emailController = TextEditingController();\n   final _passwordController = TextEditingController();\n \n   bool _isLoading = false;\n"
                },
                {
                    "date": 1744896037265,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,19 +1,36 @@\n-import 'package:drivenotes/notes_list_page.dart';\n import 'package:flutter/material.dart';\n import 'package:firebase_auth/firebase_auth.dart';\n import 'package:google_sign_in/google_sign_in.dart';\n+import 'package:firebase_core/firebase_core.dart';\n \n+void main() async {\n+  WidgetsFlutterBinding.ensureInitialized();\n+  await Firebase.initializeApp();\n+  runApp(const MyApp());\n+}\n \n+class MyApp extends StatelessWidget {\n+  const MyApp({super.key});\n \n-class LoginScreen extends StatefulWidget {\n-  const LoginScreen({super.key});\n+  @override\n+  Widget build(BuildContext context) {\n+    return MaterialApp(\n+      title: 'Firebase Login',\n+      theme: ThemeData(primarySwatch: Colors.blue),\n+      home: const LoginPage(),\n+    );\n+  }\n+}\n \n+class LoginPage extends StatefulWidget {\n+  const LoginPage({super.key});\n+\n   @override\n-  State<LoginScreen> createState() => _LoginPageState();\n+  State<LoginPage> createState() => _LoginPageState();\n }\n \n-class _LoginPageState extends State<LoginScreen> {\n+class _LoginPageState extends State<LoginPage> {\n   final _emailController = TextEditingController();\n   final _passwordController = TextEditingController();\n \n   bool _isLoading = false;\n@@ -24,9 +41,9 @@\n       await FirebaseAuth.instance.signInWithEmailAndPassword(\n         email: _emailController.text.trim(),\n         password: _passwordController.text.trim(),\n       );\n-      _navigateToNotes();\n+      _showMessage(\"Signed in with Email!\");\n     } on FirebaseAuthException catch (e) {\n       _showMessage(e.message ?? \"Failed to sign in.\");\n     } finally {\n       setState(() => _isLoading = false);\n@@ -35,43 +52,41 @@\n \n   Future<void> _signInWithGoogle() async {\n     setState(() => _isLoading = true);\n     try {\n-      final googleUser = await GoogleSignIn().signIn();\n+      final GoogleSignInAccount? googleUser = await GoogleSignIn().signIn();\n       if (googleUser == null) {\n         _showMessage(\"Google Sign-In cancelled.\");\n+        setState(() => _isLoading = false);\n         return;\n       }\n-      final auth = await googleUser.authentication;\n-      final cred = GoogleAuthProvider.credential(\n-        accessToken: auth.accessToken,\n-        idToken: auth.idToken,\n+\n+      final googleAuth = await googleUser.authentication;\n+\n+      final credential = GoogleAuthProvider.credential(\n+        accessToken: googleAuth.accessToken,\n+        idToken: googleAuth.idToken,\n       );\n-      await FirebaseAuth.instance.signInWithCredential(cred);\n-      _navigateToNotes();\n+\n+      await FirebaseAuth.instance.signInWithCredential(credential);\n+      _showMessage(\"Signed in with Google!\");\n     } catch (e) {\n       _showMessage(\"Google Sign-In failed.\");\n     } finally {\n       setState(() => _isLoading = false);\n     }\n   }\n \n-  void _navigateToNotes() {\n-    Navigator.of(context).pushReplacement(\n-      MaterialPageRoute(builder: (_) => const NotesListPage()),\n-    );\n+  void _showMessage(String message) {\n+    ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text(message)));\n   }\n \n-  void _showMessage(String msg) {\n-    ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text(msg)));\n-  }\n-\n   @override\n   Widget build(BuildContext context) {\n     return Scaffold(\n       appBar: AppBar(title: const Text(\"Login\")),\n       body: Padding(\n-        padding: const EdgeInsets.all(20),\n+        padding: const EdgeInsets.all(20.0),\n         child: _isLoading\n             ? const Center(child: CircularProgressIndicator())\n             : Column(\n                 mainAxisAlignment: MainAxisAlignment.center,\n@@ -92,23 +107,13 @@\n                     child: const Text(\"Login with Email\"),\n                   ),\n                   const SizedBox(height: 20),\n                   ElevatedButton.icon(\n-                    icon: const Icon(Icons.g_mobiledata, size: 28, color: Colors.red),\n+                    icon: Image.asset('assets/google_logo.png', height: 24),\n                     onPressed: _signInWithGoogle,\n                     label: const Text(\"Sign in with Google\"),\n-                    style: ElevatedButton.styleFrom(\n-                      backgroundColor: Colors.white,\n-                      foregroundColor: Colors.black,\n-                    ),\n+                    style: ElevatedButton.styleFrom(backgroundColor: Colors.white, foregroundColor: Colors.black),\n                   ),\n-                  const SizedBox(height: 20),\n-                  TextButton(\n-                    onPressed: () {\n-                      // if you have a register page:\n-                    },\n-                    child: const Text(\"Don't have an account? Register\"),\n-                  ),\n                 ],\n               ),\n       ),\n     );\n"
                },
                {
                    "date": 1744896042961,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,27 +2,9 @@\n import 'package:firebase_auth/firebase_auth.dart';\n import 'package:google_sign_in/google_sign_in.dart';\n import 'package:firebase_core/firebase_core.dart';\n \n-void main() async {\n-  WidgetsFlutterBinding.ensureInitialized();\n-  await Firebase.initializeApp();\n-  runApp(const MyApp());\n-}\n \n-class MyApp extends StatelessWidget {\n-  const MyApp({super.key});\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return MaterialApp(\n-      title: 'Firebase Login',\n-      theme: ThemeData(primarySwatch: Colors.blue),\n-      home: const LoginPage(),\n-    );\n-  }\n-}\n-\n class LoginPage extends StatefulWidget {\n   const LoginPage({super.key});\n \n   @override\n"
                },
                {
                    "date": 1744896049973,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,10 @@\n import 'package:flutter/material.dart';\n import 'package:firebase_auth/firebase_auth.dart';\n import 'package:google_sign_in/google_sign_in.dart';\n-import 'package:firebase_core/firebase_core.dart';\n \n \n-class LoginPage extends StatefulWidget {\n+class LoginSC extends StatefulWidget {\n   const LoginPage({super.key});\n \n   @override\n   State<LoginPage> createState() => _LoginPageState();\n"
                },
                {
                    "date": 1744896055435,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import 'package:firebase_auth/firebase_auth.dart';\n import 'package:google_sign_in/google_sign_in.dart';\n \n \n-class LoginSC extends StatefulWidget {\n+class LoginScr extends StatefulWidget {\n   const LoginPage({super.key});\n \n   @override\n   State<LoginPage> createState() => _LoginPageState();\n"
                },
                {
                    "date": 1744896061648,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,10 +2,10 @@\n import 'package:firebase_auth/firebase_auth.dart';\n import 'package:google_sign_in/google_sign_in.dart';\n \n \n-class LoginScr extends StatefulWidget {\n-  const LoginPage({super.key});\n+class LoginScreen extends StatefulWidget {\n+  const LoginScreen({super.key});\n \n   @override\n   State<LoginPage> createState() => _LoginPageState();\n }\n"
                },
                {
                    "date": 1744896070408,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,12 +6,12 @@\n class LoginScreen extends StatefulWidget {\n   const LoginScreen({super.key});\n \n   @override\n-  State<LoginPage> createState() => _LoginPageState();\n+  State<LoginScreen> createState() => _LoginPageState();\n }\n \n-class _LoginPageState extends State<LoginPage> {\n+class _LoginPageState extends State<LoginScreen> {\n   final _emailController = TextEditingController();\n   final _passwordController = TextEditingController();\n \n   bool _isLoading = false;\n"
                },
                {
                    "date": 1744896110590,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,13 +88,20 @@\n                     child: const Text(\"Login with Email\"),\n                   ),\n                   const SizedBox(height: 20),\n                   ElevatedButton.icon(\n-                    icon: Image.asset('assets/google_logo.png', height: 24),\n-                    onPressed: _signInWithGoogle,\n-                    label: const Text(\"Sign in with Google\"),\n-                    style: ElevatedButton.styleFrom(backgroundColor: Colors.white, foregroundColor: Colors.black),\n-                  ),\n+  icon: const Icon(Icons.g_mobiledata, size: 28, color: Colors.red),\n+  onPressed: _signInWithGoogle,\n+  label: const Text(\"Sign in with Google\"),\n+  style: ElevatedButton.styleFrom(\n+    backgroundColor: Colors.white,\n+    foregroundColor: Colors.black,\n+    padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 12),\n+    textStyle: const TextStyle(fontSize: 16),\n+    elevation: 2,\n+  ),\n+),\n+\n                 ],\n               ),\n       ),\n     );\n"
                },
                {
                    "date": 1744896156063,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,17 +1,18 @@\n import 'package:flutter/material.dart';\n import 'package:firebase_auth/firebase_auth.dart';\n import 'package:google_sign_in/google_sign_in.dart';\n \n+import 'register_page.dart'; // <-- Make sure this import is added\n \n-class LoginScreen extends StatefulWidget {\n-  const LoginScreen({super.key});\n+class LoginPage extends StatefulWidget {\n+  const LoginPage({super.key});\n \n   @override\n-  State<LoginScreen> createState() => _LoginPageState();\n+  State<LoginPage> createState() => _LoginPageState();\n }\n \n-class _LoginPageState extends State<LoginScreen> {\n+class _LoginPageState extends State<LoginPage> {\n   final _emailController = TextEditingController();\n   final _passwordController = TextEditingController();\n \n   bool _isLoading = false;\n@@ -57,9 +58,11 @@\n     }\n   }\n \n   void _showMessage(String message) {\n-    ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text(message)));\n+    ScaffoldMessenger.of(\n+      context,\n+    ).showSnackBar(SnackBar(content: Text(message)));\n   }\n \n   @override\n   Widget build(BuildContext context) {\n@@ -88,20 +91,26 @@\n                     child: const Text(\"Login with Email\"),\n                   ),\n                   const SizedBox(height: 20),\n                   ElevatedButton.icon(\n-  icon: const Icon(Icons.g_mobiledata, size: 28, color: Colors.red),\n-  onPressed: _signInWithGoogle,\n-  label: const Text(\"Sign in with Google\"),\n-  style: ElevatedButton.styleFrom(\n-    backgroundColor: Colors.white,\n-    foregroundColor: Colors.black,\n-    padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 12),\n-    textStyle: const TextStyle(fontSize: 16),\n-    elevation: 2,\n-  ),\n-),\n-\n+                    icon: const Icon(Icons.g_mobiledata, size: 28, color: Colors.red),\n+                    onPressed: _signInWithGoogle,\n+                    label: const Text(\"Sign in with Google\"),\n+                    style: ElevatedButton.styleFrom(\n+                      backgroundColor: Colors.white,\n+                      foregroundColor: Colors.black,\n+                    ),\n+                  ),\n+                  const SizedBox(height: 20),\n+                  TextButton(\n+                    onPressed: () {\n+                      Navigator.push(\n+                        context,\n+                        MaterialPageRoute(builder: (_) => const RegisterPage()),\n+                      );\n+                    },\n+                    child: const Text(\"Don't have an account? Register\"),\n+                  ),\n                 ],\n               ),\n       ),\n     );\n"
                },
                {
                    "date": 1744896376636,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,33 +32,34 @@\n     }\n   }\n \n   Future<void> _signInWithGoogle() async {\n-    setState(() => _isLoading = true);\n-    try {\n-      final GoogleSignInAccount? googleUser = await GoogleSignIn().signIn();\n-      if (googleUser == null) {\n-        _showMessage(\"Google Sign-In cancelled.\");\n-        setState(() => _isLoading = false);\n-        return;\n-      }\n-\n-      final googleAuth = await googleUser.authentication;\n-\n-      final credential = GoogleAuthProvider.credential(\n-        accessToken: googleAuth.accessToken,\n-        idToken: googleAuth.idToken,\n-      );\n-\n-      await FirebaseAuth.instance.signInWithCredential(credential);\n-      _showMessage(\"Signed in with Google!\");\n-    } catch (e) {\n-      _showMessage(\"Google Sign-In failed.\");\n-    } finally {\n-      setState(() => _isLoading = false);\n+  setState(() => _isLoading = true);\n+  try {\n+    final googleUser = await GoogleSignIn().signIn();\n+    if (googleUser == null) {\n+      _showMessage(\"Google Sign‑In cancelled.\");\n+      return;\n     }\n+    final auth = await googleUser.authentication;\n+    final cred = GoogleAuthProvider.credential(\n+      accessToken: auth.accessToken,\n+      idToken: auth.idToken,\n+    );\n+    await FirebaseAuth.instance.signInWithCredential(cred);\n+    _showMessage(\"Signed in with Google!\");\n+  } catch (e, st) {\n+    // print to console\n+    debugPrint(\"🔥 Google Sign‑In error: $e\");\n+    debugPrintStack(stackTrace: st);\n+    // show the actual error message\n+    _showMessage(\"Google Sign‑In failed:\\n${e.toString()}\");\n+  } finally {\n+    setState(() => _isLoading = false);\n   }\n+}\n \n+\n   void _showMessage(String message) {\n     ScaffoldMessenger.of(\n       context,\n     ).showSnackBar(SnackBar(content: Text(message)));\n"
                },
                {
                    "date": 1744896723942,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import 'package:flutter/material.dart';\n import 'package:firebase_auth/firebase_auth.dart';\n import 'package:google_sign_in/google_sign_in.dart';\n+import 'package:drivenotes/features/notes/presentation/screens/notes_screen.dart';\n \n import 'register_page.dart'; // <-- Make sure this import is added\n \n class LoginPage extends StatefulWidget {\n@@ -24,41 +25,48 @@\n         email: _emailController.text.trim(),\n         password: _passwordController.text.trim(),\n       );\n       _showMessage(\"Signed in with Email!\");\n+      _navigateToNotes();\n     } on FirebaseAuthException catch (e) {\n       _showMessage(e.message ?? \"Failed to sign in.\");\n     } finally {\n       setState(() => _isLoading = false);\n     }\n   }\n \n   Future<void> _signInWithGoogle() async {\n-  setState(() => _isLoading = true);\n-  try {\n-    final googleUser = await GoogleSignIn().signIn();\n-    if (googleUser == null) {\n-      _showMessage(\"Google Sign‑In cancelled.\");\n-      return;\n+    setState(() => _isLoading = true);\n+    try {\n+      final googleUser = await GoogleSignIn().signIn();\n+      if (googleUser == null) {\n+        _showMessage(\"Google Sign‑In cancelled.\");\n+        return;\n+      }\n+      final auth = await googleUser.authentication;\n+      final cred = GoogleAuthProvider.credential(\n+        accessToken: auth.accessToken,\n+        idToken: auth.idToken,\n+      );\n+      await FirebaseAuth.instance.signInWithCredential(cred);\n+      _showMessage(\"Signed in with Google!\");\n+      _navigateToNotes();\n+    } catch (e, st) {\n+      // print to console\n+      debugPrint(\"🔥 Google Sign‑In error: $e\");\n+      debugPrintStack(stackTrace: st);\n+      // show the actual error message\n+      _showMessage(\"Google Sign‑In failed:\\n${e.toString()}\");\n+    } finally {\n+      setState(() => _isLoading = false);\n     }\n-    final auth = await googleUser.authentication;\n-    final cred = GoogleAuthProvider.credential(\n-      accessToken: auth.accessToken,\n-      idToken: auth.idToken,\n-    );\n-    await FirebaseAuth.instance.signInWithCredential(cred);\n-    _showMessage(\"Signed in with Google!\");\n-  } catch (e, st) {\n-    // print to console\n-    debugPrint(\"🔥 Google Sign‑In error: $e\");\n-    debugPrintStack(stackTrace: st);\n-    // show the actual error message\n-    _showMessage(\"Google Sign‑In failed:\\n${e.toString()}\");\n-  } finally {\n-    setState(() => _isLoading = false);\n   }\n-}\n \n+  void _navigateToNotes() {\n+    Navigator.of(\n+      context,\n+    ).pushReplacement(MaterialPageRoute(builder: (_) => const NotesScreen()));\n+  }\n \n   void _showMessage(String message) {\n     ScaffoldMessenger.of(\n       context,\n@@ -70,50 +78,57 @@\n     return Scaffold(\n       appBar: AppBar(title: const Text(\"Login\")),\n       body: Padding(\n         padding: const EdgeInsets.all(20.0),\n-        child: _isLoading\n-            ? const Center(child: CircularProgressIndicator())\n-            : Column(\n-                mainAxisAlignment: MainAxisAlignment.center,\n-                children: [\n-                  TextField(\n-                    controller: _emailController,\n-                    decoration: const InputDecoration(labelText: \"Email\"),\n-                  ),\n-                  const SizedBox(height: 10),\n-                  TextField(\n-                    controller: _passwordController,\n-                    obscureText: true,\n-                    decoration: const InputDecoration(labelText: \"Password\"),\n-                  ),\n-                  const SizedBox(height: 20),\n-                  ElevatedButton(\n-                    onPressed: _signInWithEmail,\n-                    child: const Text(\"Login with Email\"),\n-                  ),\n-                  const SizedBox(height: 20),\n-                  ElevatedButton.icon(\n-                    icon: const Icon(Icons.g_mobiledata, size: 28, color: Colors.red),\n-                    onPressed: _signInWithGoogle,\n-                    label: const Text(\"Sign in with Google\"),\n-                    style: ElevatedButton.styleFrom(\n-                      backgroundColor: Colors.white,\n-                      foregroundColor: Colors.black,\n+        child:\n+            _isLoading\n+                ? const Center(child: CircularProgressIndicator())\n+                : Column(\n+                  mainAxisAlignment: MainAxisAlignment.center,\n+                  children: [\n+                    TextField(\n+                      controller: _emailController,\n+                      decoration: const InputDecoration(labelText: \"Email\"),\n                     ),\n-                  ),\n-                  const SizedBox(height: 20),\n-                  TextButton(\n-                    onPressed: () {\n-                      Navigator.push(\n-                        context,\n-                        MaterialPageRoute(builder: (_) => const RegisterPage()),\n-                      );\n-                    },\n-                    child: const Text(\"Don't have an account? Register\"),\n-                  ),\n-                ],\n-              ),\n+                    const SizedBox(height: 10),\n+                    TextField(\n+                      controller: _passwordController,\n+                      obscureText: true,\n+                      decoration: const InputDecoration(labelText: \"Password\"),\n+                    ),\n+                    const SizedBox(height: 20),\n+                    ElevatedButton(\n+                      onPressed: _signInWithEmail,\n+                      child: const Text(\"Login with Email\"),\n+                    ),\n+                    const SizedBox(height: 20),\n+                    ElevatedButton.icon(\n+                      icon: const Icon(\n+                        Icons.g_mobiledata,\n+                        size: 28,\n+                        color: Colors.red,\n+                      ),\n+                      onPressed: _signInWithGoogle,\n+                      label: const Text(\"Sign in with Google\"),\n+                      style: ElevatedButton.styleFrom(\n+                        backgroundColor: Colors.white,\n+                        foregroundColor: Colors.black,\n+                      ),\n+                    ),\n+                    const SizedBox(height: 20),\n+                    TextButton(\n+                      onPressed: () {\n+                        Navigator.push(\n+                          context,\n+                          MaterialPageRoute(\n+                            builder: (_) => const RegisterPage(),\n+                          ),\n+                        );\n+                      },\n+                      child: const Text(\"Don't have an account? Register\"),\n+                    ),\n+                  ],\n+                ),\n       ),\n     );\n   }\n }\n"
                },
                {
                    "date": 1744896748025,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,7 @@\n import 'package:flutter/material.dart';\n import 'package:firebase_auth/firebase_auth.dart';\n import 'package:google_sign_in/google_sign_in.dart';\n-import 'package:drivenotes/features/notes/presentation/screens/notes_screen.dart';\n \n import 'register_page.dart'; // <-- Make sure this import is added\n \n class LoginPage extends StatefulWidget {\n@@ -25,9 +24,8 @@\n         email: _emailController.text.trim(),\n         password: _passwordController.text.trim(),\n       );\n       _showMessage(\"Signed in with Email!\");\n-      _navigateToNotes();\n     } on FirebaseAuthException catch (e) {\n       _showMessage(e.message ?? \"Failed to sign in.\");\n     } finally {\n       setState(() => _isLoading = false);\n@@ -48,9 +46,8 @@\n         idToken: auth.idToken,\n       );\n       await FirebaseAuth.instance.signInWithCredential(cred);\n       _showMessage(\"Signed in with Google!\");\n-      _navigateToNotes();\n     } catch (e, st) {\n       // print to console\n       debugPrint(\"🔥 Google Sign‑In error: $e\");\n       debugPrintStack(stackTrace: st);\n@@ -60,14 +57,8 @@\n       setState(() => _isLoading = false);\n     }\n   }\n \n-  void _navigateToNotes() {\n-    Navigator.of(\n-      context,\n-    ).pushReplacement(MaterialPageRoute(builder: (_) => const NotesScreen()));\n-  }\n-\n   void _showMessage(String message) {\n     ScaffoldMessenger.of(\n       context,\n     ).showSnackBar(SnackBar(content: Text(message)));\n"
                },
                {
                    "date": 1744896807509,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import 'package:flutter/material.dart';\n import 'package:firebase_auth/firebase_auth.dart';\n import 'package:google_sign_in/google_sign_in.dart';\n+import 'package:drivenotes/features/notes/presentation/screens/notes_screen.dart';\n \n import 'register_page.dart'; // <-- Make sure this import is added\n \n class LoginPage extends StatefulWidget {\n@@ -24,8 +25,9 @@\n         email: _emailController.text.trim(),\n         password: _passwordController.text.trim(),\n       );\n       _showMessage(\"Signed in with Email!\");\n+      _navigateToNotesScreen();\n     } on FirebaseAuthException catch (e) {\n       _showMessage(e.message ?? \"Failed to sign in.\");\n     } finally {\n       setState(() => _isLoading = false);\n@@ -46,8 +48,9 @@\n         idToken: auth.idToken,\n       );\n       await FirebaseAuth.instance.signInWithCredential(cred);\n       _showMessage(\"Signed in with Google!\");\n+      _navigateToNotesScreen();\n     } catch (e, st) {\n       // print to console\n       debugPrint(\"🔥 Google Sign‑In error: $e\");\n       debugPrintStack(stackTrace: st);\n@@ -57,8 +60,14 @@\n       setState(() => _isLoading = false);\n     }\n   }\n \n+  void _navigateToNotesScreen() {\n+    Navigator.of(\n+      context,\n+    ).pushReplacement(MaterialPageRoute(builder: (_) => const NotesScreen()));\n+  }\n+\n   void _showMessage(String message) {\n     ScaffoldMessenger.of(\n       context,\n     ).showSnackBar(SnackBar(content: Text(message)));\n"
                },
                {
                    "date": 1744896823090,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import 'package:flutter/material.dart';\n import 'package:firebase_auth/firebase_auth.dart';\n import 'package:google_sign_in/google_sign_in.dart';\n-import 'package:drivenotes/features/notes/presentation/screens/notes_screen.dart';\n+import 'package:drivenotes/notes_screen.dart';\n \n import 'register_page.dart'; // <-- Make sure this import is added\n \n class LoginPage extends StatefulWidget {\n"
                },
                {
                    "date": 1744896854407,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,27 +36,26 @@\n \n   Future<void> _signInWithGoogle() async {\n     setState(() => _isLoading = true);\n     try {\n-      final googleUser = await GoogleSignIn().signIn();\n-      if (googleUser == null) {\n-        _showMessage(\"Google Sign‑In cancelled.\");\n-        return;\n+      final GoogleSignIn googleSignIn = GoogleSignIn(\n+        scopes: ['https://www.googleapis.com/auth/drive.file'],\n+      );\n+\n+      final GoogleSignInAccount? account = await googleSignIn.signIn();\n+      if (account != null) {\n+        if (context.mounted) {\n+          Navigator.of(context).pushReplacement(\n+            MaterialPageRoute(builder: (_) => const NotesScreen()),\n+          );\n+        }\n       }\n-      final auth = await googleUser.authentication;\n-      final cred = GoogleAuthProvider.credential(\n-        accessToken: auth.accessToken,\n-        idToken: auth.idToken,\n-      );\n-      await FirebaseAuth.instance.signInWithCredential(cred);\n-      _showMessage(\"Signed in with Google!\");\n-      _navigateToNotesScreen();\n-    } catch (e, st) {\n-      // print to console\n-      debugPrint(\"🔥 Google Sign‑In error: $e\");\n-      debugPrintStack(stackTrace: st);\n-      // show the actual error message\n-      _showMessage(\"Google Sign‑In failed:\\n${e.toString()}\");\n+    } catch (error) {\n+      if (context.mounted) {\n+        ScaffoldMessenger.of(\n+          context,\n+        ).showSnackBar(SnackBar(content: Text('Error signing in: $error')));\n+      }\n     } finally {\n       setState(() => _isLoading = false);\n     }\n   }\n"
                },
                {
                    "date": 1744896863052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,26 +36,27 @@\n \n   Future<void> _signInWithGoogle() async {\n     setState(() => _isLoading = true);\n     try {\n-      final GoogleSignIn googleSignIn = GoogleSignIn(\n-        scopes: ['https://www.googleapis.com/auth/drive.file'],\n+      final googleUser = await GoogleSignIn().signIn();\n+      if (googleUser == null) {\n+        _showMessage(\"Google Sign‑In cancelled.\");\n+        return;\n+      }\n+      final auth = await googleUser.authentication;\n+      final cred = GoogleAuthProvider.credential(\n+        accessToken: auth.accessToken,\n+        idToken: auth.idToken,\n       );\n-\n-      final GoogleSignInAccount? account = await googleSignIn.signIn();\n-      if (account != null) {\n-        if (context.mounted) {\n-          Navigator.of(context).pushReplacement(\n-            MaterialPageRoute(builder: (_) => const NotesScreen()),\n-          );\n-        }\n-      }\n-    } catch (error) {\n-      if (context.mounted) {\n-        ScaffoldMessenger.of(\n-          context,\n-        ).showSnackBar(SnackBar(content: Text('Error signing in: $error')));\n-      }\n+      await FirebaseAuth.instance.signInWithCredential(cred);\n+      _showMessage(\"Signed in with Google!\");\n+      _navigateToNotesScreen();\n+    } catch (e, st) {\n+      // print to console\n+      debugPrint(\"🔥 Google Sign‑In error: $e\");\n+      debugPrintStack(stackTrace: st);\n+      // show the actual error message\n+      _showMessage(\"Google Sign‑In failed:\\n${e.toString()}\");\n     } finally {\n       setState(() => _isLoading = false);\n     }\n   }\n"
                },
                {
                    "date": 1744896871592,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+import 'package:drivenotes/notes_list_page.dart';\n import 'package:flutter/material.dart';\n import 'package:firebase_auth/firebase_auth.dart';\n import 'package:google_sign_in/google_sign_in.dart';\n import 'package:drivenotes/notes_screen.dart';\n@@ -63,9 +64,9 @@\n \n   void _navigateToNotesScreen() {\n     Navigator.of(\n       context,\n-    ).pushReplacement(MaterialPageRoute(builder: (_) => const NotesScreen()));\n+    ).pushReplacement(MaterialPageRoute(builder: (_) => const NotesListPage()));\n   }\n \n   void _showMessage(String message) {\n     ScaffoldMessenger.of(\n"
                },
                {
                    "date": 1744897572550,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,9 @@\n-import 'package:drivenotes/notes_list_page.dart';\n import 'package:flutter/material.dart';\n import 'package:firebase_auth/firebase_auth.dart';\n import 'package:google_sign_in/google_sign_in.dart';\n-import 'package:drivenotes/notes_screen.dart';\n+import 'package:go_router/go_router.dart';\n \n-import 'register_page.dart'; // <-- Make sure this import is added\n-\n class LoginPage extends StatefulWidget {\n   const LoginPage({super.key});\n \n   @override\n@@ -15,9 +12,8 @@\n \n class _LoginPageState extends State<LoginPage> {\n   final _emailController = TextEditingController();\n   final _passwordController = TextEditingController();\n-\n   bool _isLoading = false;\n \n   Future<void> _signInWithEmail() async {\n     setState(() => _isLoading = true);\n@@ -25,111 +21,85 @@\n       await FirebaseAuth.instance.signInWithEmailAndPassword(\n         email: _emailController.text.trim(),\n         password: _passwordController.text.trim(),\n       );\n-      _showMessage(\"Signed in with Email!\");\n-      _navigateToNotesScreen();\n+      GoRouter.of(context).go('/notes');\n     } on FirebaseAuthException catch (e) {\n-      _showMessage(e.message ?? \"Failed to sign in.\");\n+      _showMessage(e.message ?? 'Login failed');\n     } finally {\n       setState(() => _isLoading = false);\n     }\n   }\n \n   Future<void> _signInWithGoogle() async {\n     setState(() => _isLoading = true);\n     try {\n-      final googleUser = await GoogleSignIn().signIn();\n+      final googleUser = await GoogleSignIn(\n+        scopes: ['email', 'https://www.googleapis.com/auth/drive.file'],\n+      ).signIn();\n       if (googleUser == null) {\n-        _showMessage(\"Google Sign‑In cancelled.\");\n+        _showMessage('Google Sign‑In cancelled');\n         return;\n       }\n       final auth = await googleUser.authentication;\n       final cred = GoogleAuthProvider.credential(\n         accessToken: auth.accessToken,\n         idToken: auth.idToken,\n       );\n       await FirebaseAuth.instance.signInWithCredential(cred);\n-      _showMessage(\"Signed in with Google!\");\n-      _navigateToNotesScreen();\n-    } catch (e, st) {\n-      // print to console\n-      debugPrint(\"🔥 Google Sign‑In error: $e\");\n-      debugPrintStack(stackTrace: st);\n-      // show the actual error message\n-      _showMessage(\"Google Sign‑In failed:\\n${e.toString()}\");\n+      GoRouter.of(context).go('/notes');\n+    } catch (e) {\n+      _showMessage('Google Sign‑In failed:\\n$e');\n     } finally {\n       setState(() => _isLoading = false);\n     }\n   }\n \n-  void _navigateToNotesScreen() {\n-    Navigator.of(\n-      context,\n-    ).pushReplacement(MaterialPageRoute(builder: (_) => const NotesListPage()));\n-  }\n+  void _showMessage(String m) =>\n+      ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text(m)));\n \n-  void _showMessage(String message) {\n-    ScaffoldMessenger.of(\n-      context,\n-    ).showSnackBar(SnackBar(content: Text(message)));\n-  }\n-\n   @override\n   Widget build(BuildContext context) {\n     return Scaffold(\n-      appBar: AppBar(title: const Text(\"Login\")),\n-      body: Padding(\n-        padding: const EdgeInsets.all(20.0),\n-        child:\n-            _isLoading\n-                ? const Center(child: CircularProgressIndicator())\n-                : Column(\n-                  mainAxisAlignment: MainAxisAlignment.center,\n-                  children: [\n-                    TextField(\n-                      controller: _emailController,\n-                      decoration: const InputDecoration(labelText: \"Email\"),\n+      appBar: AppBar(title: const Text('DriveNotes Login')),\n+      body: Center(\n+        child: Padding(\n+          padding: const EdgeInsets.all(20),\n+          child: _isLoading\n+              ? const CircularProgressIndicator()\n+              : Column(mainAxisSize: MainAxisSize.min, children: [\n+                  TextField(\n+                    controller: _emailController,\n+                    decoration: const InputDecoration(labelText: 'Email'),\n+                  ),\n+                  const SizedBox(height: 12),\n+                  TextField(\n+                    controller: _passwordController,\n+                    obscureText: true,\n+                    decoration: const InputDecoration(labelText: 'Password'),\n+                  ),\n+                  const SizedBox(height: 20),\n+                  ElevatedButton(\n+                    onPressed: _signInWithEmail,\n+                    child: const Text('Login with Email'),\n+                  ),\n+                  const SizedBox(height: 12),\n+                  ElevatedButton.icon(\n+                    icon: const Icon(Icons.g_mobiledata, size: 28, color: Colors.red),\n+                    label: const Text('Sign in with Google'),\n+                    style: ElevatedButton.styleFrom(\n+                      backgroundColor: Colors.white,\n+                      foregroundColor: Colors.black,\n                     ),\n-                    const SizedBox(height: 10),\n-                    TextField(\n-                      controller: _passwordController,\n-                      obscureText: true,\n-                      decoration: const InputDecoration(labelText: \"Password\"),\n-                    ),\n-                    const SizedBox(height: 20),\n-                    ElevatedButton(\n-                      onPressed: _signInWithEmail,\n-                      child: const Text(\"Login with Email\"),\n-                    ),\n-                    const SizedBox(height: 20),\n-                    ElevatedButton.icon(\n-                      icon: const Icon(\n-                        Icons.g_mobiledata,\n-                        size: 28,\n-                        color: Colors.red,\n-                      ),\n-                      onPressed: _signInWithGoogle,\n-                      label: const Text(\"Sign in with Google\"),\n-                      style: ElevatedButton.styleFrom(\n-                        backgroundColor: Colors.white,\n-                        foregroundColor: Colors.black,\n-                      ),\n-                    ),\n-                    const SizedBox(height: 20),\n-                    TextButton(\n-                      onPressed: () {\n-                        Navigator.push(\n-                          context,\n-                          MaterialPageRoute(\n-                            builder: (_) => const RegisterPage(),\n-                          ),\n-                        );\n-                      },\n-                      child: const Text(\"Don't have an account? Register\"),\n-                    ),\n-                  ],\n-                ),\n+                    onPressed: _signInWithGoogle,\n+                  ),\n+                  const SizedBox(height: 20),\n+                  TextButton(\n+                    onPressed: () => GoRouter.of(context).go('/register'),\n+                    child: const Text(\"Don't have an account? Register\"),\n+                  ),\n+                ]),\n+        ),\n       ),\n     );\n   }\n }\n"
                },
                {
                    "date": 1744898344836,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import 'package:flutter/material.dart';\n import 'package:firebase_auth/firebase_auth.dart';\n import 'package:google_sign_in/google_sign_in.dart';\n+import 'package:flutter_secure_storage/flutter_secure_storage.dart';\n import 'package:go_router/go_router.dart';\n \n class LoginPage extends StatefulWidget {\n   const LoginPage({super.key});\n@@ -13,8 +14,9 @@\n class _LoginPageState extends State<LoginPage> {\n   final _emailController = TextEditingController();\n   final _passwordController = TextEditingController();\n   bool _isLoading = false;\n+  final _storage = const FlutterSecureStorage();\n \n   Future<void> _signInWithEmail() async {\n     setState(() => _isLoading = true);\n     try {\n@@ -32,73 +34,97 @@\n \n   Future<void> _signInWithGoogle() async {\n     setState(() => _isLoading = true);\n     try {\n-      final googleUser = await GoogleSignIn(\n-        scopes: ['email', 'https://www.googleapis.com/auth/drive.file'],\n-      ).signIn();\n+      final googleUser =\n+          await GoogleSignIn(\n+            scopes: ['https://www.googleapis.com/auth/drive.file'],\n+          ).signIn();\n+\n       if (googleUser == null) {\n-        _showMessage('Google Sign‑In cancelled');\n+        _showMessage('Sign in cancelled');\n         return;\n       }\n+\n       final auth = await googleUser.authentication;\n-      final cred = GoogleAuthProvider.credential(\n-        accessToken: auth.accessToken,\n-        idToken: auth.idToken,\n+\n+      // Store tokens\n+      await _storage.write(key: 'access_token', value: auth.accessToken);\n+      await _storage.write(\n+        key: 'refresh_token',\n+        value: auth.idToken,\n+      ); // Using idToken as refresh token for demo\n+      await _storage.write(\n+        key: 'token_expiry',\n+        value: DateTime.now().add(const Duration(hours: 1)).toIso8601String(),\n       );\n-      await FirebaseAuth.instance.signInWithCredential(cred);\n-      GoRouter.of(context).go('/notes');\n+\n+      if (mounted) context.go('/notes');\n     } catch (e) {\n-      _showMessage('Google Sign‑In failed:\\n$e');\n+      _showMessage('Error signing in: $e');\n     } finally {\n       setState(() => _isLoading = false);\n     }\n   }\n \n-  void _showMessage(String m) =>\n-      ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text(m)));\n+  void _showMessage(String message) {\n+    if (!mounted) return;\n+    ScaffoldMessenger.of(\n+      context,\n+    ).showSnackBar(SnackBar(content: Text(message)));\n+  }\n \n   @override\n   Widget build(BuildContext context) {\n     return Scaffold(\n       appBar: AppBar(title: const Text('DriveNotes Login')),\n       body: Center(\n         child: Padding(\n           padding: const EdgeInsets.all(20),\n-          child: _isLoading\n-              ? const CircularProgressIndicator()\n-              : Column(mainAxisSize: MainAxisSize.min, children: [\n-                  TextField(\n-                    controller: _emailController,\n-                    decoration: const InputDecoration(labelText: 'Email'),\n+          child:\n+              _isLoading\n+                  ? const CircularProgressIndicator()\n+                  : Column(\n+                    mainAxisSize: MainAxisSize.min,\n+                    children: [\n+                      TextField(\n+                        controller: _emailController,\n+                        decoration: const InputDecoration(labelText: 'Email'),\n+                      ),\n+                      const SizedBox(height: 12),\n+                      TextField(\n+                        controller: _passwordController,\n+                        obscureText: true,\n+                        decoration: const InputDecoration(\n+                          labelText: 'Password',\n+                        ),\n+                      ),\n+                      const SizedBox(height: 20),\n+                      ElevatedButton(\n+                        onPressed: _signInWithEmail,\n+                        child: const Text('Login with Email'),\n+                      ),\n+                      const SizedBox(height: 12),\n+                      ElevatedButton.icon(\n+                        icon: const Icon(\n+                          Icons.g_mobiledata,\n+                          size: 28,\n+                          color: Colors.red,\n+                        ),\n+                        label: const Text('Sign in with Google'),\n+                        style: ElevatedButton.styleFrom(\n+                          backgroundColor: Colors.white,\n+                          foregroundColor: Colors.black,\n+                        ),\n+                        onPressed: _signInWithGoogle,\n+                      ),\n+                      const SizedBox(height: 20),\n+                      TextButton(\n+                        onPressed: () => GoRouter.of(context).go('/register'),\n+                        child: const Text(\"Don't have an account? Register\"),\n+                      ),\n+                    ],\n                   ),\n-                  const SizedBox(height: 12),\n-                  TextField(\n-                    controller: _passwordController,\n-                    obscureText: true,\n-                    decoration: const InputDecoration(labelText: 'Password'),\n-                  ),\n-                  const SizedBox(height: 20),\n-                  ElevatedButton(\n-                    onPressed: _signInWithEmail,\n-                    child: const Text('Login with Email'),\n-                  ),\n-                  const SizedBox(height: 12),\n-                  ElevatedButton.icon(\n-                    icon: const Icon(Icons.g_mobiledata, size: 28, color: Colors.red),\n-                    label: const Text('Sign in with Google'),\n-                    style: ElevatedButton.styleFrom(\n-                      backgroundColor: Colors.white,\n-                      foregroundColor: Colors.black,\n-                    ),\n-                    onPressed: _signInWithGoogle,\n-                  ),\n-                  const SizedBox(height: 20),\n-                  TextButton(\n-                    onPressed: () => GoRouter.of(context).go('/register'),\n-                    child: const Text(\"Don't have an account? Register\"),\n-                  ),\n-                ]),\n         ),\n       ),\n     );\n   }\n"
                },
                {
                    "date": 1744898536042,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,17 +46,18 @@\n       }\n \n       final auth = await googleUser.authentication;\n \n-      // Store tokens\n+      // Store tokens with UTC expiry\n       await _storage.write(key: 'access_token', value: auth.accessToken);\n+      await _storage.write(key: 'refresh_token', value: auth.idToken);\n       await _storage.write(\n-        key: 'refresh_token',\n-        value: auth.idToken,\n-      ); // Using idToken as refresh token for demo\n-      await _storage.write(\n         key: 'token_expiry',\n-        value: DateTime.now().add(const Duration(hours: 1)).toIso8601String(),\n+        value:\n+            DateTime.now()\n+                .add(const Duration(hours: 1))\n+                .toUtc()\n+                .toIso8601String(),\n       );\n \n       if (mounted) context.go('/notes');\n     } catch (e) {\n"
                },
                {
                    "date": 1744899718691,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,12 @@\n     setState(() => _isLoading = true);\n     try {\n       final googleUser =\n           await GoogleSignIn(\n-            scopes: ['https://www.googleapis.com/auth/drive.file'],\n+            scopes: [\n+              'https://www.googleapis.com/auth/drive.readonly',\n+              'https://www.googleapis.com/auth/drive.file',\n+            ],\n           ).signIn();\n \n       if (googleUser == null) {\n         _showMessage('Sign in cancelled');\n"
                },
                {
                    "date": 1744913264841,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,22 +2,64 @@\n import 'package:firebase_auth/firebase_auth.dart';\n import 'package:google_sign_in/google_sign_in.dart';\n import 'package:flutter_secure_storage/flutter_secure_storage.dart';\n import 'package:go_router/go_router.dart';\n+import 'package:flutter_svg/flutter_svg.dart';\n+import 'package:animated_text_kit/animated_text_kit.dart';\n \n class LoginPage extends StatefulWidget {\n   const LoginPage({super.key});\n \n   @override\n   State<LoginPage> createState() => _LoginPageState();\n }\n \n-class _LoginPageState extends State<LoginPage> {\n+class _LoginPageState extends State<LoginPage>\n+    with SingleTickerProviderStateMixin {\n   final _emailController = TextEditingController();\n   final _passwordController = TextEditingController();\n   bool _isLoading = false;\n   final _storage = const FlutterSecureStorage();\n+  late final AnimationController _animationController;\n+  late final Animation<double> _fadeAnimation;\n+  late final Animation<Offset> _slideAnimation;\n \n+  @override\n+  void initState() {\n+    super.initState();\n+    _animationController = AnimationController(\n+      vsync: this,\n+      duration: const Duration(milliseconds: 1500),\n+    );\n+\n+    _fadeAnimation = Tween<double>(begin: 0.0, end: 1.0).animate(\n+      CurvedAnimation(\n+        parent: _animationController,\n+        curve: const Interval(0.0, 0.5, curve: Curves.easeOut),\n+      ),\n+    );\n+\n+    _slideAnimation = Tween<Offset>(\n+      begin: const Offset(0, 0.5),\n+      end: Offset.zero,\n+    ).animate(\n+      CurvedAnimation(\n+        parent: _animationController,\n+        curve: const Interval(0.3, 1.0, curve: Curves.easeOut),\n+      ),\n+    );\n+\n+    _animationController.forward();\n+  }\n+\n+  @override\n+  void dispose() {\n+    _animationController.dispose();\n+    _emailController.dispose();\n+    _passwordController.dispose();\n+    super.dispose();\n+  }\n+\n   Future<void> _signInWithEmail() async {\n     setState(() => _isLoading = true);\n     try {\n       await FirebaseAuth.instance.signInWithEmailAndPassword(\n@@ -48,10 +90,8 @@\n         return;\n       }\n \n       final auth = await googleUser.authentication;\n-\n-      // Store tokens with UTC expiry\n       await _storage.write(key: 'access_token', value: auth.accessToken);\n       await _storage.write(key: 'refresh_token', value: auth.idToken);\n       await _storage.write(\n         key: 'token_expiry',\n@@ -71,64 +111,208 @@\n   }\n \n   void _showMessage(String message) {\n     if (!mounted) return;\n-    ScaffoldMessenger.of(\n-      context,\n-    ).showSnackBar(SnackBar(content: Text(message)));\n+    ScaffoldMessenger.of(context).showSnackBar(\n+      SnackBar(content: Text(message), behavior: SnackBarBehavior.floating),\n+    );\n   }\n \n   @override\n   Widget build(BuildContext context) {\n+    final theme = Theme.of(context);\n+\n     return Scaffold(\n-      appBar: AppBar(title: const Text('DriveNotes Login')),\n-      body: Center(\n-        child: Padding(\n-          padding: const EdgeInsets.all(20),\n-          child:\n-              _isLoading\n-                  ? const CircularProgressIndicator()\n-                  : Column(\n-                    mainAxisSize: MainAxisSize.min,\n-                    children: [\n-                      TextField(\n-                        controller: _emailController,\n-                        decoration: const InputDecoration(labelText: 'Email'),\n+      body: Container(\n+        decoration: BoxDecoration(\n+          gradient: LinearGradient(\n+            begin: Alignment.topLeft,\n+            end: Alignment.bottomRight,\n+            colors: [\n+              theme.colorScheme.primaryContainer,\n+              theme.colorScheme.surface,\n+            ],\n+          ),\n+        ),\n+        child: SafeArea(\n+          child: Center(\n+            child: SingleChildScrollView(\n+              padding: const EdgeInsets.all(24),\n+              child: Column(\n+                mainAxisAlignment: MainAxisAlignment.center,\n+                children: [\n+                  // Logo and Title\n+                  FadeTransition(\n+                    opacity: _fadeAnimation,\n+                    child: SlideTransition(\n+                      position: _slideAnimation,\n+                      child: Column(\n+                        children: [\n+                          Icon(\n+                            Icons.note_alt_outlined,\n+                            size: 80,\n+                            color: theme.colorScheme.primary,\n+                          ),\n+                          const SizedBox(height: 24),\n+                          DefaultTextStyle(\n+                            style: theme.textTheme.headlineMedium!.copyWith(\n+                              color: theme.colorScheme.onSurface,\n+                              fontWeight: FontWeight.bold,\n+                            ),\n+                            child: AnimatedTextKit(\n+                              animatedTexts: [\n+                                TypewriterAnimatedText(\n+                                  'DriveNotes',\n+                                  speed: const Duration(milliseconds: 100),\n+                                ),\n+                              ],\n+                              isRepeatingAnimation: false,\n+                            ),\n+                          ),\n+                          const SizedBox(height: 8),\n+                          Text(\n+                            'Your notes, everywhere.',\n+                            style: theme.textTheme.titleMedium?.copyWith(\n+                              color: theme.colorScheme.onSurfaceVariant,\n+                            ),\n+                          ),\n+                        ],\n                       ),\n-                      const SizedBox(height: 12),\n-                      TextField(\n-                        controller: _passwordController,\n-                        obscureText: true,\n-                        decoration: const InputDecoration(\n-                          labelText: 'Password',\n+                    ),\n+                  ),\n+                  const SizedBox(height: 48),\n+\n+                  // Sign in form\n+                  FadeTransition(\n+                    opacity: _fadeAnimation,\n+                    child: SlideTransition(\n+                      position: _slideAnimation,\n+                      child: Container(\n+                        constraints: const BoxConstraints(maxWidth: 400),\n+                        child: Card(\n+                          elevation: 8,\n+                          shadowColor: Colors.black26,\n+                          child: Padding(\n+                            padding: const EdgeInsets.all(24),\n+                            child: Column(\n+                              crossAxisAlignment: CrossAxisAlignment.stretch,\n+                              children: [\n+                                Text(\n+                                  'Welcome Back',\n+                                  style: theme.textTheme.headlineSmall,\n+                                  textAlign: TextAlign.center,\n+                                ),\n+                                const SizedBox(height: 24),\n+                                TextField(\n+                                  controller: _emailController,\n+                                  decoration: InputDecoration(\n+                                    labelText: 'Email',\n+                                    prefixIcon: const Icon(\n+                                      Icons.email_outlined,\n+                                    ),\n+                                    border: OutlineInputBorder(\n+                                      borderRadius: BorderRadius.circular(12),\n+                                    ),\n+                                  ),\n+                                  keyboardType: TextInputType.emailAddress,\n+                                ),\n+                                const SizedBox(height: 16),\n+                                TextField(\n+                                  controller: _passwordController,\n+                                  decoration: InputDecoration(\n+                                    labelText: 'Password',\n+                                    prefixIcon: const Icon(Icons.lock_outline),\n+                                    border: OutlineInputBorder(\n+                                      borderRadius: BorderRadius.circular(12),\n+                                    ),\n+                                  ),\n+                                  obscureText: true,\n+                                ),\n+                                const SizedBox(height: 24),\n+                                ElevatedButton(\n+                                  onPressed:\n+                                      _isLoading ? null : _signInWithEmail,\n+                                  style: ElevatedButton.styleFrom(\n+                                    padding: const EdgeInsets.all(16),\n+                                    shape: RoundedRectangleBorder(\n+                                      borderRadius: BorderRadius.circular(12),\n+                                    ),\n+                                  ),\n+                                  child:\n+                                      _isLoading\n+                                          ? const SizedBox(\n+                                            height: 20,\n+                                            width: 20,\n+                                            child: CircularProgressIndicator(\n+                                              strokeWidth: 2,\n+                                            ),\n+                                          )\n+                                          : const Text('Login with Email'),\n+                                ),\n+                                const SizedBox(height: 16),\n+                                Row(\n+                                  children: [\n+                                    Expanded(\n+                                      child: Divider(\n+                                        color: theme.colorScheme.outline,\n+                                      ),\n+                                    ),\n+                                    Padding(\n+                                      padding: const EdgeInsets.symmetric(\n+                                        horizontal: 16,\n+                                      ),\n+                                      child: Text(\n+                                        'OR',\n+                                        style: TextStyle(\n+                                          color: theme.colorScheme.outline,\n+                                        ),\n+                                      ),\n+                                    ),\n+                                    Expanded(\n+                                      child: Divider(\n+                                        color: theme.colorScheme.outline,\n+                                      ),\n+                                    ),\n+                                  ],\n+                                ),\n+                                const SizedBox(height: 16),\n+                                OutlinedButton.icon(\n+                                  icon: Image.asset(\n+                                    'lib/assets/google_logo.png',\n+                                    height: 24,\n+                                  ),\n+                                  label: const Text('Sign in with Google'),\n+                                  style: OutlinedButton.styleFrom(\n+                                    padding: const EdgeInsets.all(16),\n+                                    shape: RoundedRectangleBorder(\n+                                      borderRadius: BorderRadius.circular(12),\n+                                    ),\n+                                  ),\n+                                  onPressed:\n+                                      _isLoading ? null : _signInWithGoogle,\n+                                ),\n+                              ],\n+                            ),\n+                          ),\n                         ),\n                       ),\n-                      const SizedBox(height: 20),\n-                      ElevatedButton(\n-                        onPressed: _signInWithEmail,\n-                        child: const Text('Login with Email'),\n+                    ),\n+                  ),\n+                  const SizedBox(height: 24),\n+                  FadeTransition(\n+                    opacity: _fadeAnimation,\n+                    child: TextButton(\n+                      onPressed: () => GoRouter.of(context).go('/register'),\n+                      child: Text(\n+                        \"Don't have an account? Register\",\n+                        style: TextStyle(color: theme.colorScheme.primary),\n                       ),\n-                      const SizedBox(height: 12),\n-                      ElevatedButton.icon(\n-                        icon: const Icon(\n-                          Icons.g_mobiledata,\n-                          size: 28,\n-                          color: Colors.red,\n-                        ),\n-                        label: const Text('Sign in with Google'),\n-                        style: ElevatedButton.styleFrom(\n-                          backgroundColor: Colors.white,\n-                          foregroundColor: Colors.black,\n-                        ),\n-                        onPressed: _signInWithGoogle,\n-                      ),\n-                      const SizedBox(height: 20),\n-                      TextButton(\n-                        onPressed: () => GoRouter.of(context).go('/register'),\n-                        child: const Text(\"Don't have an account? Register\"),\n-                      ),\n-                    ],\n+                    ),\n                   ),\n+                ],\n+              ),\n+            ),\n+          ),\n         ),\n       ),\n     );\n   }\n"
                },
                {
                    "date": 1744913638189,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,9 @@\n     with SingleTickerProviderStateMixin {\n   final _emailController = TextEditingController();\n   final _passwordController = TextEditingController();\n   bool _isLoading = false;\n+  bool _showFeatures = false;\n   final _storage = const FlutterSecureStorage();\n   late final AnimationController _animationController;\n   late final Animation<double> _fadeAnimation;\n   late final Animation<Offset> _slideAnimation;\n@@ -116,8 +117,12 @@\n       SnackBar(content: Text(message), behavior: SnackBarBehavior.floating),\n     );\n   }\n \n+  void _toggleFeatures() {\n+    setState(() => _showFeatures = !_showFeatures);\n+  }\n+\n   @override\n   Widget build(BuildContext context) {\n     final theme = Theme.of(context);\n \n@@ -196,86 +201,21 @@\n                             child: Column(\n                               crossAxisAlignment: CrossAxisAlignment.stretch,\n                               children: [\n                                 Text(\n-                                  'Welcome Back',\n+                                  'Welcome to DriveNotes',\n                                   style: theme.textTheme.headlineSmall,\n                                   textAlign: TextAlign.center,\n                                 ),\n-                                const SizedBox(height: 24),\n-                                TextField(\n-                                  controller: _emailController,\n-                                  decoration: InputDecoration(\n-                                    labelText: 'Email',\n-                                    prefixIcon: const Icon(\n-                                      Icons.email_outlined,\n-                                    ),\n-                                    border: OutlineInputBorder(\n-                                      borderRadius: BorderRadius.circular(12),\n-                                    ),\n-                                  ),\n-                                  keyboardType: TextInputType.emailAddress,\n-                                ),\n                                 const SizedBox(height: 16),\n-                                TextField(\n-                                  controller: _passwordController,\n-                                  decoration: InputDecoration(\n-                                    labelText: 'Password',\n-                                    prefixIcon: const Icon(Icons.lock_outline),\n-                                    border: OutlineInputBorder(\n-                                      borderRadius: BorderRadius.circular(12),\n-                                    ),\n+                                Text(\n+                                  'Sign in with your Google account to sync your notes with Google Drive.',\n+                                  style: theme.textTheme.bodyLarge?.copyWith(\n+                                    color: theme.colorScheme.onSurfaceVariant,\n                                   ),\n-                                  obscureText: true,\n+                                  textAlign: TextAlign.center,\n                                 ),\n                                 const SizedBox(height: 24),\n-                                ElevatedButton(\n-                                  onPressed:\n-                                      _isLoading ? null : _signInWithEmail,\n-                                  style: ElevatedButton.styleFrom(\n-                                    padding: const EdgeInsets.all(16),\n-                                    shape: RoundedRectangleBorder(\n-                                      borderRadius: BorderRadius.circular(12),\n-                                    ),\n-                                  ),\n-                                  child:\n-                                      _isLoading\n-                                          ? const SizedBox(\n-                                            height: 20,\n-                                            width: 20,\n-                                            child: CircularProgressIndicator(\n-                                              strokeWidth: 2,\n-                                            ),\n-                                          )\n-                                          : const Text('Login with Email'),\n-                                ),\n-                                const SizedBox(height: 16),\n-                                Row(\n-                                  children: [\n-                                    Expanded(\n-                                      child: Divider(\n-                                        color: theme.colorScheme.outline,\n-                                      ),\n-                                    ),\n-                                    Padding(\n-                                      padding: const EdgeInsets.symmetric(\n-                                        horizontal: 16,\n-                                      ),\n-                                      child: Text(\n-                                        'OR',\n-                                        style: TextStyle(\n-                                          color: theme.colorScheme.outline,\n-                                        ),\n-                                      ),\n-                                    ),\n-                                    Expanded(\n-                                      child: Divider(\n-                                        color: theme.colorScheme.outline,\n-                                      ),\n-                                    ),\n-                                  ],\n-                                ),\n-                                const SizedBox(height: 16),\n                                 OutlinedButton.icon(\n                                   icon: Image.asset(\n                                     'lib/assets/google_logo.png',\n                                     height: 24,\n@@ -289,26 +229,74 @@\n                                   ),\n                                   onPressed:\n                                       _isLoading ? null : _signInWithGoogle,\n                                 ),\n+                                if (_isLoading)\n+                                  Padding(\n+                                    padding: const EdgeInsets.only(top: 16),\n+                                    child: Center(\n+                                      child: CircularProgressIndicator(\n+                                        strokeWidth: 2,\n+                                        color: theme.colorScheme.primary,\n+                                      ),\n+                                    ),\n+                                  ),\n                               ],\n                             ),\n                           ),\n                         ),\n                       ),\n                     ),\n                   ),\n                   const SizedBox(height: 24),\n+                  // Feature showcase\n                   FadeTransition(\n                     opacity: _fadeAnimation,\n-                    child: TextButton(\n-                      onPressed: () => GoRouter.of(context).go('/register'),\n-                      child: Text(\n-                        \"Don't have an account? Register\",\n-                        style: TextStyle(color: theme.colorScheme.primary),\n+                    child: TextButton.icon(\n+                      icon: AnimatedRotation(\n+                        duration: const Duration(milliseconds: 300),\n+                        turns: _showFeatures ? 0.5 : 0,\n+                        child: const Icon(Icons.expand_more),\n                       ),\n+                      label: const Text('Keep your notes in one place'),\n+                      onPressed: _toggleFeatures,\n                     ),\n                   ),\n+                  if (_showFeatures)\n+                    AnimatedSize(\n+                      duration: const Duration(milliseconds: 300),\n+                      child: Card(\n+                        margin: const EdgeInsets.only(top: 16),\n+                        child: Padding(\n+                          padding: const EdgeInsets.all(16),\n+                          child: Column(\n+                            children: [\n+                              ListTile(\n+                                leading: const Icon(Icons.cloud_sync),\n+                                title: const Text('Sync with Google Drive'),\n+                                subtitle: const Text(\n+                                  'Access your notes from any device',\n+                                ),\n+                              ),\n+                              ListTile(\n+                                leading: const Icon(Icons.edit_note),\n+                                title: const Text('Rich Text Editor'),\n+                                subtitle: const Text(\n+                                  'Create and edit notes easily',\n+                                ),\n+                              ),\n+                              ListTile(\n+                                leading: const Icon(Icons.security),\n+                                title: const Text('Secure Storage'),\n+                                subtitle: const Text(\n+                                  'Your notes are safe and private',\n+                                ),\n+                              ),\n+                            ],\n+                          ),\n+                        ),\n+                      ),\n+                    ),\n                 ],\n               ),\n             ),\n           ),\n"
                },
                {
                    "date": 1744969668778,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -261,34 +261,34 @@\n                       onPressed: _toggleFeatures,\n                     ),\n                   ),\n                   if (_showFeatures)\n-                    AnimatedSize(\n-                      duration: const Duration(milliseconds: 300),\n+                    const AnimatedSize(\n+                      duration: Duration(milliseconds: 300),\n                       child: Card(\n-                        margin: const EdgeInsets.only(top: 16),\n+                        margin: EdgeInsets.only(top: 16),\n                         child: Padding(\n-                          padding: const EdgeInsets.all(16),\n+                          padding: EdgeInsets.all(16),\n                           child: Column(\n                             children: [\n                               ListTile(\n-                                leading: const Icon(Icons.cloud_sync),\n-                                title: const Text('Sync with Google Drive'),\n-                                subtitle: const Text(\n+                                leading: Icon(Icons.cloud_sync),\n+                                title: Text('Sync with Google Drive'),\n+                                subtitle: Text(\n                                   'Access your notes from any device',\n                                 ),\n                               ),\n                               ListTile(\n-                                leading: const Icon(Icons.edit_note),\n-                                title: const Text('Rich Text Editor'),\n-                                subtitle: const Text(\n+                                leading: Icon(Icons.edit_note),\n+                                title: Text('Rich Text Editor'),\n+                                subtitle: Text(\n                                   'Create and edit notes easily',\n                                 ),\n                               ),\n                               ListTile(\n-                                leading: const Icon(Icons.security),\n-                                title: const Text('Secure Storage'),\n-                                subtitle: const Text(\n+                                leading: Icon(Icons.security),\n+                                title: Text('Secure Storage'),\n+                                subtitle: Text(\n                                   'Your notes are safe and private',\n                                 ),\n                               ),\n                             ],\n"
                }
            ],
            "date": 1744891247571,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\r\nimport 'package:firebase_auth/firebase_auth.dart';\r\nimport 'package:google_sign_in/google_sign_in.dart';\r\nimport 'package:firebase_core/firebase_core.dart';\r\n\r\nvoid main() async {\r\n  WidgetsFlutterBinding.ensureInitialized();\r\n  await Firebase.initializeApp();\r\n  runApp(const MyApp());\r\n}\r\n\r\nclass MyApp extends StatelessWidget {\r\n  const MyApp({super.key});\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return MaterialApp(\r\n      title: 'Firebase Login',\r\n      theme: ThemeData(primarySwatch: Colors.blue),\r\n      home: const LoginPage(),\r\n    );\r\n  }\r\n}\r\n\r\nclass LoginPage extends StatefulWidget {\r\n  const LoginPage({super.key});\r\n\r\n  @override\r\n  State<LoginPage> createState() => _LoginPageState();\r\n}\r\n\r\nclass _LoginPageState extends State<LoginPage> {\r\n  final _emailController = TextEditingController();\r\n  final _passwordController = TextEditingController();\r\n\r\n  bool _isLoading = false;\r\n\r\n  Future<void> _signInWithEmail() async {\r\n    setState(() => _isLoading = true);\r\n    try {\r\n      await FirebaseAuth.instance.signInWithEmailAndPassword(\r\n        email: _emailController.text.trim(),\r\n        password: _passwordController.text.trim(),\r\n      );\r\n      _showMessage(\"Signed in with Email!\");\r\n    } on FirebaseAuthException catch (e) {\r\n      _showMessage(e.message ?? \"Failed to sign in.\");\r\n    } finally {\r\n      setState(() => _isLoading = false);\r\n    }\r\n  }\r\n\r\n  Future<void> _signInWithGoogle() async {\r\n    setState(() => _isLoading = true);\r\n    try {\r\n      final GoogleSignInAccount? googleUser = await GoogleSignIn().signIn();\r\n      if (googleUser == null) {\r\n        _showMessage(\"Google Sign-In cancelled.\");\r\n        setState(() => _isLoading = false);\r\n        return;\r\n      }\r\n\r\n      final googleAuth = await googleUser.authentication;\r\n\r\n      final credential = GoogleAuthProvider.credential(\r\n        accessToken: googleAuth.accessToken,\r\n        idToken: googleAuth.idToken,\r\n      );\r\n\r\n      await FirebaseAuth.instance.signInWithCredential(credential);\r\n      _showMessage(\"Signed in with Google!\");\r\n    } catch (e) {\r\n      _showMessage(\"Google Sign-In failed.\");\r\n    } finally {\r\n      setState(() => _isLoading = false);\r\n    }\r\n  }\r\n\r\n  void _showMessage(String message) {\r\n    ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text(message)));\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      appBar: AppBar(title: const Text(\"Login\")),\r\n      body: Padding(\r\n        padding: const EdgeInsets.all(20.0),\r\n        child: _isLoading\r\n            ? const Center(child: CircularProgressIndicator())\r\n            : Column(\r\n                mainAxisAlignment: MainAxisAlignment.center,\r\n                children: [\r\n                  TextField(\r\n                    controller: _emailController,\r\n                    decoration: const InputDecoration(labelText: \"Email\"),\r\n                  ),\r\n                  const SizedBox(height: 10),\r\n                  TextField(\r\n                    controller: _passwordController,\r\n                    obscureText: true,\r\n                    decoration: const InputDecoration(labelText: \"Password\"),\r\n                  ),\r\n                  const SizedBox(height: 20),\r\n                  ElevatedButton(\r\n                    onPressed: _signInWithEmail,\r\n                    child: const Text(\"Login with Email\"),\r\n                  ),\r\n                  const SizedBox(height: 20),\r\n                  ElevatedButton.icon(\r\n                    icon: Image.asset('assets/google_logo.png', height: 24),\r\n                    onPressed: _signInWithGoogle,\r\n                    label: const Text(\"Sign in with Google\"),\r\n                    style: ElevatedButton.styleFrom(backgroundColor: Colors.white, foregroundColor: Colors.black),\r\n                  ),\r\n                ],\r\n              ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}