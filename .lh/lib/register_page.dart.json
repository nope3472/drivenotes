{
    "sourceFile": "lib/register_page.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1744893517696,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1744897584795,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import 'package:flutter/material.dart';\r\n import 'package:firebase_auth/firebase_auth.dart';\r\n+import 'package:go_router/go_router.dart';\r\n \r\n class RegisterPage extends StatefulWidget {\r\n   const RegisterPage({super.key});\r\n \r\n@@ -8,88 +9,68 @@\n   State<RegisterPage> createState() => _RegisterPageState();\r\n }\r\n \r\n class _RegisterPageState extends State<RegisterPage> {\r\n-  final _emailController = TextEditingController();\r\n-  final _passwordController = TextEditingController();\r\n-  final _confirmPasswordController = TextEditingController();\r\n+  final _email = TextEditingController();\r\n+  final _pass = TextEditingController();\r\n+  final _confirm = TextEditingController();\r\n+  bool _loading = false;\r\n \r\n-  bool _isLoading = false;\r\n-\r\n   Future<void> _register() async {\r\n-    setState(() => _isLoading = true);\r\n-\r\n-    final email = _emailController.text.trim();\r\n-    final password = _passwordController.text.trim();\r\n-    final confirmPassword = _confirmPasswordController.text.trim();\r\n-\r\n-    if (password != confirmPassword) {\r\n-      _showMessage(\"Passwords do not match.\");\r\n-      setState(() => _isLoading = false);\r\n+    if (_pass.text != _confirm.text) {\r\n+      _show('Passwords don’t match');\r\n       return;\r\n     }\r\n-\r\n+    setState(() => _loading = true);\r\n     try {\r\n       await FirebaseAuth.instance.createUserWithEmailAndPassword(\r\n-        email: email,\r\n-        password: password,\r\n+        email: _email.text.trim(),\r\n+        password: _pass.text.trim(),\r\n       );\r\n-      _showMessage(\"Registration successful!\");\r\n-      Navigator.pop(context); // Go back to login\r\n+      GoRouter.of(context).go('/notes');\r\n     } on FirebaseAuthException catch (e) {\r\n-      _showMessage(e.message ?? \"Registration failed.\");\r\n+      _show(e.message ?? 'Registration failed');\r\n     } finally {\r\n-      setState(() => _isLoading = false);\r\n+      setState(() => _loading = false);\r\n     }\r\n   }\r\n \r\n-  void _showMessage(String message) {\r\n-    ScaffoldMessenger.of(\r\n-      context,\r\n-    ).showSnackBar(SnackBar(content: Text(message)));\r\n-  }\r\n+  void _show(String m) =>\r\n+      ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text(m)));\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n-      appBar: AppBar(title: const Text(\"Register\")),\r\n-      body: Padding(\r\n-        padding: const EdgeInsets.all(20.0),\r\n-        child: _isLoading\r\n-            ? const Center(child: CircularProgressIndicator())\r\n-            : Column(\r\n-                mainAxisAlignment: MainAxisAlignment.center,\r\n-                children: [\r\n+      appBar: AppBar(title: const Text('Register')),\r\n+      body: Center(\r\n+        child: Padding(\r\n+          padding: const EdgeInsets.all(20),\r\n+          child: _loading\r\n+              ? const CircularProgressIndicator()\r\n+              : Column(mainAxisSize: MainAxisSize.min, children: [\r\n                   TextField(\r\n-                    controller: _emailController,\r\n-                    decoration: const InputDecoration(labelText: \"Email\"),\r\n+                    controller: _email,\r\n+                    decoration: const InputDecoration(labelText: 'Email'),\r\n                   ),\r\n-                  const SizedBox(height: 10),\r\n+                  const SizedBox(height: 12),\r\n                   TextField(\r\n-                    controller: _passwordController,\r\n+                    controller: _pass,\r\n                     obscureText: true,\r\n-                    decoration: const InputDecoration(labelText: \"Password\"),\r\n+                    decoration: const InputDecoration(labelText: 'Password'),\r\n                   ),\r\n-                  const SizedBox(height: 10),\r\n+                  const SizedBox(height: 12),\r\n                   TextField(\r\n-                    controller: _confirmPasswordController,\r\n+                    controller: _confirm,\r\n                     obscureText: true,\r\n-                    decoration: const InputDecoration(labelText: \"Confirm Password\"),\r\n+                    decoration: const InputDecoration(labelText: 'Confirm Password'),\r\n                   ),\r\n                   const SizedBox(height: 20),\r\n                   ElevatedButton(\r\n                     onPressed: _register,\r\n-                    child: const Text(\"Register\"),\r\n+                    child: const Text('Register'),\r\n                   ),\r\n-                  const SizedBox(height: 20),\r\n-                  TextButton(\r\n-                    onPressed: () {\r\n-                      Navigator.pop(context); // Go back to login\r\n-                    },\r\n-                    child: const Text(\"Already have an account? Login\"),\r\n-                  )\r\n-                ],\r\n-              ),\r\n+                ]),\r\n+        ),\r\n       ),\r\n     );\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1744913888415,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,76 +0,0 @@\n-import 'package:flutter/material.dart';\r\n-import 'package:firebase_auth/firebase_auth.dart';\r\n-import 'package:go_router/go_router.dart';\r\n-\r\n-class RegisterPage extends StatefulWidget {\r\n-  const RegisterPage({super.key});\r\n-\r\n-  @override\r\n-  State<RegisterPage> createState() => _RegisterPageState();\r\n-}\r\n-\r\n-class _RegisterPageState extends State<RegisterPage> {\r\n-  final _email = TextEditingController();\r\n-  final _pass = TextEditingController();\r\n-  final _confirm = TextEditingController();\r\n-  bool _loading = false;\r\n-\r\n-  Future<void> _register() async {\r\n-    if (_pass.text != _confirm.text) {\r\n-      _show('Passwords don’t match');\r\n-      return;\r\n-    }\r\n-    setState(() => _loading = true);\r\n-    try {\r\n-      await FirebaseAuth.instance.createUserWithEmailAndPassword(\r\n-        email: _email.text.trim(),\r\n-        password: _pass.text.trim(),\r\n-      );\r\n-      GoRouter.of(context).go('/notes');\r\n-    } on FirebaseAuthException catch (e) {\r\n-      _show(e.message ?? 'Registration failed');\r\n-    } finally {\r\n-      setState(() => _loading = false);\r\n-    }\r\n-  }\r\n-\r\n-  void _show(String m) =>\r\n-      ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text(m)));\r\n-\r\n-  @override\r\n-  Widget build(BuildContext context) {\r\n-    return Scaffold(\r\n-      appBar: AppBar(title: const Text('Register')),\r\n-      body: Center(\r\n-        child: Padding(\r\n-          padding: const EdgeInsets.all(20),\r\n-          child: _loading\r\n-              ? const CircularProgressIndicator()\r\n-              : Column(mainAxisSize: MainAxisSize.min, children: [\r\n-                  TextField(\r\n-                    controller: _email,\r\n-                    decoration: const InputDecoration(labelText: 'Email'),\r\n-                  ),\r\n-                  const SizedBox(height: 12),\r\n-                  TextField(\r\n-                    controller: _pass,\r\n-                    obscureText: true,\r\n-                    decoration: const InputDecoration(labelText: 'Password'),\r\n-                  ),\r\n-                  const SizedBox(height: 12),\r\n-                  TextField(\r\n-                    controller: _confirm,\r\n-                    obscureText: true,\r\n-                    decoration: const InputDecoration(labelText: 'Confirm Password'),\r\n-                  ),\r\n-                  const SizedBox(height: 20),\r\n-                  ElevatedButton(\r\n-                    onPressed: _register,\r\n-                    child: const Text('Register'),\r\n-                  ),\r\n-                ]),\r\n-        ),\r\n-      ),\r\n-    );\r\n-  }\r\n-}\r\n\\ No newline at end of file\n"
                }
            ],
            "date": 1744893517696,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\r\nimport 'package:firebase_auth/firebase_auth.dart';\r\n\r\nclass RegisterPage extends StatefulWidget {\r\n  const RegisterPage({super.key});\r\n\r\n  @override\r\n  State<RegisterPage> createState() => _RegisterPageState();\r\n}\r\n\r\nclass _RegisterPageState extends State<RegisterPage> {\r\n  final _emailController = TextEditingController();\r\n  final _passwordController = TextEditingController();\r\n  final _confirmPasswordController = TextEditingController();\r\n\r\n  bool _isLoading = false;\r\n\r\n  Future<void> _register() async {\r\n    setState(() => _isLoading = true);\r\n\r\n    final email = _emailController.text.trim();\r\n    final password = _passwordController.text.trim();\r\n    final confirmPassword = _confirmPasswordController.text.trim();\r\n\r\n    if (password != confirmPassword) {\r\n      _showMessage(\"Passwords do not match.\");\r\n      setState(() => _isLoading = false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await FirebaseAuth.instance.createUserWithEmailAndPassword(\r\n        email: email,\r\n        password: password,\r\n      );\r\n      _showMessage(\"Registration successful!\");\r\n      Navigator.pop(context); // Go back to login\r\n    } on FirebaseAuthException catch (e) {\r\n      _showMessage(e.message ?? \"Registration failed.\");\r\n    } finally {\r\n      setState(() => _isLoading = false);\r\n    }\r\n  }\r\n\r\n  void _showMessage(String message) {\r\n    ScaffoldMessenger.of(\r\n      context,\r\n    ).showSnackBar(SnackBar(content: Text(message)));\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      appBar: AppBar(title: const Text(\"Register\")),\r\n      body: Padding(\r\n        padding: const EdgeInsets.all(20.0),\r\n        child: _isLoading\r\n            ? const Center(child: CircularProgressIndicator())\r\n            : Column(\r\n                mainAxisAlignment: MainAxisAlignment.center,\r\n                children: [\r\n                  TextField(\r\n                    controller: _emailController,\r\n                    decoration: const InputDecoration(labelText: \"Email\"),\r\n                  ),\r\n                  const SizedBox(height: 10),\r\n                  TextField(\r\n                    controller: _passwordController,\r\n                    obscureText: true,\r\n                    decoration: const InputDecoration(labelText: \"Password\"),\r\n                  ),\r\n                  const SizedBox(height: 10),\r\n                  TextField(\r\n                    controller: _confirmPasswordController,\r\n                    obscureText: true,\r\n                    decoration: const InputDecoration(labelText: \"Confirm Password\"),\r\n                  ),\r\n                  const SizedBox(height: 20),\r\n                  ElevatedButton(\r\n                    onPressed: _register,\r\n                    child: const Text(\"Register\"),\r\n                  ),\r\n                  const SizedBox(height: 20),\r\n                  TextButton(\r\n                    onPressed: () {\r\n                      Navigator.pop(context); // Go back to login\r\n                    },\r\n                    child: const Text(\"Already have an account? Login\"),\r\n                  )\r\n                ],\r\n              ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}