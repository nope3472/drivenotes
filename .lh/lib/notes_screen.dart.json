{
    "sourceFile": "lib/notes_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1744896836262,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1744896844248,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,86 +1,35 @@\n import 'package:flutter/material.dart';\r\n-import 'package:flutter_riverpod/flutter_riverpod.dart';\r\n-import 'package:drivenotes/features/notes/presentation/providers/drive_service_provider.dart';\r\n-import 'package:drivenotes/features/notes/presentation/providers/notes_provider.dart';\r\n-import 'package:drivenotes/features/notes/presentation/widgets/add_note_dialog.dart';\r\n-import 'package:drivenotes/features/notes/presentation/widgets/edit_note_dialog.dart';\r\n import 'package:drivenotes/login.dart';\r\n \r\n-class NotesScreen extends ConsumerWidget {\r\n+class NotesScreen extends StatelessWidget {\r\n   const NotesScreen({super.key});\r\n \r\n   @override\r\n-  Widget build(BuildContext context, WidgetRef ref) {\r\n-    final driveService = ref.watch(initializedDriveServiceProvider);\r\n-    final notes = ref.watch(notesProvider);\r\n-\r\n+  Widget build(BuildContext context) {\r\n     return Scaffold(\r\n       appBar: AppBar(\r\n         title: const Text('My Notes'),\r\n         actions: [\r\n           IconButton(\r\n-            icon: const Icon(Icons.sync),\r\n-            onPressed: () {\r\n-              ref.read(notesProvider.notifier).loadNotes();\r\n-            },\r\n-          ),\r\n-          IconButton(\r\n             icon: const Icon(Icons.logout),\r\n             onPressed: () {\r\n-              ref.read(authServiceProvider).signOut().then((_) {\r\n-                Navigator.of(context).pushReplacement(\r\n-                  MaterialPageRoute(builder: (_) => const LoginPage()),\r\n-                );\r\n-              });\r\n+              Navigator.of(context).pushReplacement(\r\n+                MaterialPageRoute(builder: (_) => const LoginPage()),\r\n+              );\r\n             },\r\n           ),\r\n         ],\r\n       ),\r\n-      body: driveService.when(\r\n-        data: (_) => notes.when(\r\n-          data: (notes) => notes.isEmpty\r\n-              ? const Center(child: Text('No notes yet. Tap + to add one!'))\r\n-              : ListView.builder(\r\n-                  itemCount: notes.length,\r\n-                  itemBuilder: (context, index) {\r\n-                    final note = notes[index];\r\n-                    return ListTile(\r\n-                      title: Text(note.title),\r\n-                      subtitle: Text(\r\n-                        note.content.length > 50\r\n-                            ? '${note.content.substring(0, 50)}...'\r\n-                            : note.content,\r\n-                      ),\r\n-                      trailing: IconButton(\r\n-                        icon: const Icon(Icons.delete),\r\n-                        onPressed: () {\r\n-                          ref.read(notesProvider.notifier).deleteNote(note.id);\r\n-                        },\r\n-                      ),\r\n-                      onTap: () {\r\n-                        showDialog(\r\n-                          context: context,\r\n-                          builder: (context) => EditNoteDialog(note: note),\r\n-                        );\r\n-                      },\r\n-                    );\r\n-                  },\r\n-                ),\r\n-          loading: () => const Center(child: CircularProgressIndicator()),\r\n-          error: (error, stack) => Center(child: Text('Error: $error')),\r\n-        ),\r\n-        loading: () => const Center(child: CircularProgressIndicator()),\r\n-        error: (error, stack) => Center(child: Text('Error: $error')),\r\n+      body: const Center(\r\n+        child: Text('Welcome to Notes Screen!'),\r\n       ),\r\n       floatingActionButton: FloatingActionButton(\r\n         onPressed: () {\r\n-          showDialog(\r\n-            context: context,\r\n-            builder: (context) => const AddNoteDialog(),\r\n\\ No newline at end of file\n-          );\r\n+          // TODO: Implement note creation\r\n         },\r\n         child: const Icon(Icons.add),\r\n       ),\r\n     );\r\n   }\r\n-} \n+}\r\n+\r\n"
                }
            ],
            "date": 1744896836262,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\r\nimport 'package:flutter_riverpod/flutter_riverpod.dart';\r\nimport 'package:drivenotes/features/notes/presentation/providers/drive_service_provider.dart';\r\nimport 'package:drivenotes/features/notes/presentation/providers/notes_provider.dart';\r\nimport 'package:drivenotes/features/notes/presentation/widgets/add_note_dialog.dart';\r\nimport 'package:drivenotes/features/notes/presentation/widgets/edit_note_dialog.dart';\r\nimport 'package:drivenotes/login.dart';\r\n\r\nclass NotesScreen extends ConsumerWidget {\r\n  const NotesScreen({super.key});\r\n\r\n  @override\r\n  Widget build(BuildContext context, WidgetRef ref) {\r\n    final driveService = ref.watch(initializedDriveServiceProvider);\r\n    final notes = ref.watch(notesProvider);\r\n\r\n    return Scaffold(\r\n      appBar: AppBar(\r\n        title: const Text('My Notes'),\r\n        actions: [\r\n          IconButton(\r\n            icon: const Icon(Icons.sync),\r\n            onPressed: () {\r\n              ref.read(notesProvider.notifier).loadNotes();\r\n            },\r\n          ),\r\n          IconButton(\r\n            icon: const Icon(Icons.logout),\r\n            onPressed: () {\r\n              ref.read(authServiceProvider).signOut().then((_) {\r\n                Navigator.of(context).pushReplacement(\r\n                  MaterialPageRoute(builder: (_) => const LoginPage()),\r\n                );\r\n              });\r\n            },\r\n          ),\r\n        ],\r\n      ),\r\n      body: driveService.when(\r\n        data: (_) => notes.when(\r\n          data: (notes) => notes.isEmpty\r\n              ? const Center(child: Text('No notes yet. Tap + to add one!'))\r\n              : ListView.builder(\r\n                  itemCount: notes.length,\r\n                  itemBuilder: (context, index) {\r\n                    final note = notes[index];\r\n                    return ListTile(\r\n                      title: Text(note.title),\r\n                      subtitle: Text(\r\n                        note.content.length > 50\r\n                            ? '${note.content.substring(0, 50)}...'\r\n                            : note.content,\r\n                      ),\r\n                      trailing: IconButton(\r\n                        icon: const Icon(Icons.delete),\r\n                        onPressed: () {\r\n                          ref.read(notesProvider.notifier).deleteNote(note.id);\r\n                        },\r\n                      ),\r\n                      onTap: () {\r\n                        showDialog(\r\n                          context: context,\r\n                          builder: (context) => EditNoteDialog(note: note),\r\n                        );\r\n                      },\r\n                    );\r\n                  },\r\n                ),\r\n          loading: () => const Center(child: CircularProgressIndicator()),\r\n          error: (error, stack) => Center(child: Text('Error: $error')),\r\n        ),\r\n        loading: () => const Center(child: CircularProgressIndicator()),\r\n        error: (error, stack) => Center(child: Text('Error: $error')),\r\n      ),\r\n      floatingActionButton: FloatingActionButton(\r\n        onPressed: () {\r\n          showDialog(\r\n            context: context,\r\n            builder: (context) => const AddNoteDialog(),\r\n          );\r\n        },\r\n        child: const Icon(Icons.add),\r\n      ),\r\n    );\r\n  }\r\n} "
        }
    ]
}